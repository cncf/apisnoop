#+TITLE: VIM Commands Summary


* Purpose                                                          :vim:tips:
-- Note: This became repository for all cmd cheats picked up over the last couple of weeks, need a way to group them, also easy reference? current is open and search... keywords still not refined

These tips are for using the VIM mode of Spacemacs.
* Basics
- Insertion mode, type i or a to insert after the cursor.
- To get back into normal mode, press the Esc key or rapidly press f d.
- Pressing <ESC> will place you in normal state or will cancel an unwanted and partially completed command.
- These commands are executed in command mode / normal state.
* Command format

 The format for a command in Command Mode (normal state) is:
: [number]  command  object
OR
: command  [number]  object
where:
- number :: how many times to repeat the command
- command :: what to do (e.g. =d=  for delete)
- object :: is what the command should act upon, such as  =w=  for word.
* Editor
** Switch on menu bar: Spc Spc Type: Menu and select Menu-bar-mode
** Quit   =SPACE q q=
** Increase/decrease font size   =SPACE z x= (+ k, k, etc. -j, j etc.)
** To see all open buffers Type =Spc bb=
** Cancel incomplte / wrong command type: =Clt G=
** Insert a hyperlink =,i l= - Then type the hyperlink + Enter, Type text assisiated with hyperlink + Enter


Note: Combinations of refering to text object using:
- w for word
- S for sentence
- p for paragraph

* Files
** Create a file   =SPACE f f= <type in the new file path, press enter, it will ask to create a file>
** Delete a file =SPACE f D=
** Find a file in your project   =SPACE p f=
** Edit the .spacemacs config file   =SPACE f e d=
** Switch to a file recently opened  =SPACE b b=
** writes current buffer to disk with file name FILENAME. =:w FILENAME=
** saves the lines # through # in file FILENAME. =:#,#w FILENAME=
** retrieve file FILENAME and insert into the current buffer following the cursor position =:r FILENAME=
* Find Text
** Find text in buffer   =/=
(type search text, press ENTER, followed by n or N (next/previous))
** Find next instance of word cursor is over    =*=
** Find previous instance of word cursor is over    =#=
** Turn off previous search highlighting   =:nohl=  (then press ENTER)
** Find text in project   SPACE /
** Find text under cursor in project (or selected with visual-mode)   SPACE *
** Resume last search   SPACE s l
** Find and replace text in buffer, from current line   :.,$s/<find text>/<replace text>/gc

* Navigation by "Finding"
** find a character forward in a line and move to it =f<char>=
** find a character forward in a line and move until it (one character before) =t<char>=
** (f)ind a character backward in a line and move to it =F<char>=
** find a character backward in a line and move until it =T<char>=
** repeat last f, t, F, or T command =;=
** To find other instances of a word, while on the word, =**=
hightlight all the same words and type n to go to the next word.

Note: Use f & t (or F&T) is combination with other commands to build a new command ie. dtx = delete till x or ytb = yank till b

* Navigation
Cursor is moved using either the arrow keys or the hjkl keys.
         h (left)        j (down)       k (up)            l (right)
H, M, L	move (H)igh, (M)iddle, or (L)ow within the view frame.

- Move up a page   ctrl u
- Move down a page   ctrl d

Move the line with cursor to the middle of the screen type: zz
 - to the top type zt
 - or bottom type: zb

Go up to next paragraph (whitepace line)   {

Go down to next paragraph (whitepace line)   }

Beginning of the line type: 0 (zero) or ^

End of the line type: $

Forward by word type: w (beginning of the word)

Forward by word type: e (end of the word)

Backwards by word type: b
  - number + w,e,b repeat the action by the number. ie. 7w move 7 words.

Add more lines between lines / Move lines down type: Ctrl j


* Movement in the Buffer:
** go to the beginning of a buffer =gg=
** move to the end of a buffer =G=
** go to line number<NUM> =:<NUM>ENTER= or =<NUM>G=
** Activate relitive line numbers =SPC t r=
** Activage normal line numbers =SPC t n=
* Open / Collapse heading trees
  - Type: TAB for a single heading
  - Type: Spc TAB to cycle through all heading trees in the buffer.

* Window (Frames) Layouts
** Move between frames =Ctl x o=
** Move between frames =Spc + frame number=
** close the active frame =Clt x 0= or =Spc w c=
** Split frame vertically   =SPACE w s=
** Split frame horizontally   =SPACE w h=
** Resize windows height =Ctrl w + or -=
** Resize windows width =Ctrl w < or >=
** Make all windows same size =Ctrl w ==
** Navigate to the window in the given direction =<SPC w h|j|k|l=
** Move the current window in the given direction =<SPC w H|J|K|L
* Buffers
** move between open Buffers (Files) =Spc + TAB=
** List open buffers =SPACE b b=
** Open new buffer =SPACE b N n=
** In the Box, launch a new window with =Clt b, c=
** Close a buffer =Ctrl x + buffer number= - Close buffer 2: =Ctrl x 2=
* Highlight Text with Visual Mode
- Press v. (To enter visual mode so you can highlight text).
- Use the arrow keys (or h,j,k,l,w,b,$) to highlight.
- Type v i w for word selection, v i s for sentence selection
* Editing in an org file
- Type Formating (Bold, Underline etc.) Type , x + options in sub menu ie. b = Bold, u = Underline
- Make a title Type at the start of a line: #+TITLE This is a title
- Make a bullet point Type: * followed by the heading. Next level of bullet points type: ** and *** for the next level etc.
- Make a bullet point, 2nd options type: Alt + Enter + Enter
- To continue with bullet list, at the end of the previous line press Alt + Enter
- Add a TODO type Ctrl + shift and type Enter
* Copy, paste, Insert, Delete (Cut), Undo, Replace
** Copy
*** To copy selected text type  =y=
*** Copy a word =yw=
*** Copy a line =yy=
*** Copy from cursor to end of line =y$=
*** Show previous things you’ve copied (yanked)  =SPACE r y=
** Insert
*** To insert text at the cursor while in normal state type:   i - type in text
*** Typing  o  opens a line BELOW the cursor and places the cursor on the open line in insert state.
*** Typing a capital  O  opens the line ABOVE the line the cursor is on.
*** Type an  a  to insert text AFTER the character the cursor is on.
*** Typing a capital  A  automatically appends text to the end of the line.
*** Typing a capital  R  enters Replace mode until  <ESC>  is pressed to exit.
**  Replace / Change
   - To replace the character under the cursor, type  r  and then the character which will replace the original.
   - Replace a word you are on type: C i W . It will delete the word and go to Inert mode
   - Replace a sentence you are on type: C i s . It will delete the sentence and go to Inert mode
   - The change command allows you to change the specified object from the cursor to the end of the object.  eg. Type  cw  to change from the cursor to the end of the word,  c$  to change to the end of a line. The format for change is:      [number]  c  object    OR    c  [number]  object
   - Change everything between quotes   c i “    (this also works for parens, single quotes, etc.)

   - Substitue:
   - To substitute new for the first old on a line type  :s/old/new
   - To substitute new for all 'old's on a line type     :s/old/new/g
   - To substitute phrases between two line #'s type     :#,#s/old/new/g
   - To substitute all occurrences in the file type      :%s/old/new/g

 - Delete: (Work as cut funtion)
   - Delete from the cursor to the end of a word type:  dw
   - Delete from the cursor to the end of a line type:  d$
   - Delete a whole line type:  dd
   - Delete complete line type: C  (Delete from cursor forward)
   - Delete a character under the cursor in normal state type:  x
   - Delete highlighted text   d
   - Delete word and insert text    cw
   - Delete to end of line     d$
   - Delete until right paren   df)
   - Delete a word you are on type: d a w
   - Delete a sentence you are on type: d a s
   - Delete to the end of the current word type: de
   - Delete to the end of next word type: d2e
   - Delete down a line (current and one below) type:	dj
   - Delete up until next closing parenthesis tpye: dt)
   - Delete up until the first search match for "world" type: d/world

 - Undo / Redo
   - Undo entred command - Ctrl g
   - To undo previous actions, type:  u
   - To Redo (undo the undo's) type:  CTRL-Rc
   - To see Undo tree type: Spc a u
   - Redo   ctrl-r


* Executes an external command =:!=
** Show a directory listing :!ls  or  :!dir
** removes file FILENAME.:!rm  or  :!del FILENAME
* Additional functions:
- Go to previous function[
- Go to next function   ]]
- Go up to outer brace   [{
- Go down to outer brace   ]}
- Comment out a line    g c c   (requires the evil-commentary layer)
- Comment out highlighted text   g c
- Indenting highlighted text    Type > or < to indent right or left.    (to indent more, type 2> or 3>)
- Join lines separated by whitespace   J
- Show whitespace   SPACE t w
- Convert spaces to tabs   SPACE : (then type tabify and press ENTER)
- Convert tabs to spaces   SPACE : (then type untabify and press ENTER)


* spacemacs commands I should probably know by heart

**** Files manipulations key bindings
Files manipulation commands (start with ~f~):

| Key Binding | Description                                                    |
|-------------+----------------------------------------------------------------|
| ~SPC f c~   | copy current file to a different location                      |
| ~SPC f C d~ | convert file from unix to dos encoding                         |
| ~SPC f C u~ | convert file from dos to unix encoding                         |
| ~SPC f D~   | delete a file and the associated buffer (ask for confirmation) |
| ~SPC f E~   | open a file with elevated privileges (sudo edit)               |
| ~SPC f f~   | open file with =helm= (or =ido=)                               |
| ~SPC f F~   | try to open the file under point =helm=                        |
| ~SPC f j~   | jump to the current buffer file in dired                       |
| ~SPC f l~   | open file literally in =fundamental mode=                      |
| ~SPC f L~   | Locate a file (using =locate=)                                 |
| ~SPC f o~   | open a file using the default external program                 |
| ~SPC f R~   | rename the current file                                        |
| ~SPC f s~   | save a file                                                    |
| ~SPC f S~   | save all files                                                 |
| ~SPC f r~   | open a recent file with =helm=                                 |
| ~SPC f t~   | toggle file tree side bar using [[https://github.com/jaypei/emacs-neotree][NeoTree]]                        |
| ~SPC f v d~ | add a directory variable                                       |
| ~SPC f v f~ | add a local variable to the current file                       |
| ~SPC f v p~ | add a local variable to the first line of the current file     |
| ~SPC f y~   | show current file absolute path in the minibuffer              |

## Find files
SPC ff: find files or url
SPC pf: find file in project
SPC ph: search in a project with helm
SPC bb: search in buffers

--
## Search in files
SPC ss
/: search with evil

--
## Window
SPC w =	balance split windows
SPC w c	close a window
SPC w c	close a window
SPC w C	delete another window using ace-delete-window
SPC w d	toggle window dedication (dedicated window cannot be reused by a mode)
SPC w [hjkl] move to window
SPC w [HJKL] move the window
SPC w s or SPC w -	horizontal split
SPC w S	horizontal split and focus new window
SPC w u	undo window layout (used to effectively undo a closed window)
SPC w U	redo window layout
SPC w v or SPC w /	vertical split
SPC w V	vertical split and focus new window
SPC w w	cycle and focus between windows
SPC w m	maximize/minimize a window (maximize is equivalent to delete other windows)
SPC w M	maximize/minimize a window, when maximized the buffer is centered

--
## buffer
SPC TAB	switch to alternate buffer in the current window (switch back and forth)
SPC b b	switch to a buffer using helm
SPC b d	kill the current buffer (does not delete the visited file)
SPC b e	erase the content of the buffer (ask for confirmation)
SPC b h	open *spacemacs* home buffer
SPC b k	kill a buffer
SPC b K	kill all buffers except the current one


## errors
SPC e n	go to the next error
SPC e p	go to the previous error

--
## Quit
SPC q q	Quit Emacs and kill the server, prompt for changed buffers to save
SPC q Q	Quit Emacs and kill the server, lose all unsaved changes.
SPC q r	Restart both Emacs and the server, prompting to save any changed buffers
SPC q s	Save the buffers, quit Emacs and kill the server
SPC q z	Kill the current frame


Git commands (start with ~g~):

| Key Binding | Description                                         |
|-------------+-----------------------------------------------------|
| ~SPC g b~   | open a =magit= blame                                |
| ~SPC g B~   | quit =magit= blame                                  |
| ~SPC g c~   | commit changes                                      |
| ~SPC g C~   | checkout branches                                   |
| ~SPC g d~   | show diff prompt                                    |
| ~SPC g D~   | show diff against current head                      |
| ~SPC g e~   | show ediff comparison                               |
| ~SPC g E~   | show ediff against current head                     |
| ~SPC g f~   | show fetch prompt                                   |
| ~SPC g F~   | show pull prompt                                    |
| ~SPC g H c~ | clear highlights                                    |
| ~SPC g H h~ | highlight regions by age of commits                 |
| ~SPC g H t~ | highlight regions by last updated time              |
| ~SPC g i~   | git init a given directory                          |
| ~SPC g I~   | open =helm-gitignore=                               |
| ~SPC g l~   | open a =magit= log                                  |
| ~SPC g L~   | display the log for a file                          |
| ~SPC g P~   | show push prompt                                    |
| ~SPC g s~   | open a =magit= status window                        |
| ~SPC g S~   | stage current file                                  |
| ~SPC g m~   | display the last commit message of the current line |
| ~SPC g t~   | launch the git time machine                         |
| ~SPC g U~   | unstage current file                                |



* Go Commands
- New terminal block <s + TAB
- Add Go to the block to for Golang: =#+begin_src GO=
- Run the block with ,, in the block in command mode
* Basic Linux
- List directories - =ls=
- Launch Treemacs - =SPACE p t= , Quit out of Treemacs =q=
- GIT commands ??
* Tmate session
- Type tmate discplay -p "#{tmate_ssh}'+ ENTER
- ssh code will be displayed on screen that can be shared for pairing.

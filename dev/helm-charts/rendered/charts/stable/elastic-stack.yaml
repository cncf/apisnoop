---
# Source: elastic-stack/charts/elasticsearch/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-elasticsearch
  labels:
    app: RELEASE-NAME-elasticsearch
    chart: "elasticsearch-1.14.2"
    release: "RELEASE-NAME"
    heritage: "Tiller"
data:
  elasticsearch.yml: |-
    cluster.name: elasticsearch

    node.data: ${NODE_DATA:true}
    node.master: ${NODE_MASTER:true}
    node.ingest: ${NODE_INGEST:true}
    node.name: ${HOSTNAME}

    network.host: 0.0.0.0
    # see https://github.com/kubernetes/kubernetes/issues/3595
    bootstrap.memory_lock: ${BOOTSTRAP_MEMORY_LOCK:false}

    discovery:
      zen:
        ping.unicast.hosts: ${DISCOVERY_SERVICE:}
        minimum_master_nodes: ${MINIMUM_MASTER_NODES:2}

    # see https://github.com/elastic/elasticsearch-definitive-guide/pull/679
    processors: ${PROCESSORS:}

    # avoid split-brain w/ a minimum consensus of two masters plus a data node
    gateway.expected_master_nodes: ${EXPECTED_MASTER_NODES:2}
    gateway.expected_data_nodes: ${EXPECTED_DATA_NODES:1}
    gateway.recover_after_time: ${RECOVER_AFTER_TIME:5m}
    gateway.recover_after_master_nodes: ${RECOVER_AFTER_MASTER_NODES:2}
    gateway.recover_after_data_nodes: ${RECOVER_AFTER_DATA_NODES:1}
  log4j2.properties: |-
    status = error
    appender.console.type = Console
    appender.console.name = console
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c{1.}] %marker%m%n
    rootLogger.level = info
    rootLogger.appenderRef.console.ref = console
    logger.searchguard.name = com.floragunn
    logger.searchguard.level = info
  pre-stop-hook.sh: |-
    #!/bin/bash
    exec &> >(tee -a "/var/log/elasticsearch-hooks.log")
    NODE_NAME=${HOSTNAME}
    echo "Prepare to migrate data of the node ${NODE_NAME}"
    echo "Move all data from node ${NODE_NAME}"
    curl -s -XPUT -H 'Content-Type: application/json' 'RELEASE-NAME-elasticsearch-client:9200/_cluster/settings' -d "{
      \"transient\" :{
          \"cluster.routing.allocation.exclude._name\" : \"${NODE_NAME}\"
      }
    }"
    echo ""

    while true ; do
      echo -e "Wait for node ${NODE_NAME} to become empty"
      SHARDS_ALLOCATION=$(curl -s -XGET 'http://RELEASE-NAME-elasticsearch-client:9200/_cat/shards')
      if ! echo "${SHARDS_ALLOCATION}" | grep -E "${NODE_NAME}"; then
        break
      fi
      sleep 1
    done
    echo "Node ${NODE_NAME} is ready to shutdown"
  post-start-hook.sh: |-
    #!/bin/bash
    exec &> >(tee -a "/var/log/elasticsearch-hooks.log")
    NODE_NAME=${HOSTNAME}
    CLUSTER_SETTINGS=$(curl -s -XGET "http://RELEASE-NAME-elasticsearch-client:9200/_cluster/settings")
    if echo "${CLUSTER_SETTINGS}" | grep -E "${NODE_NAME}"; then
      echo "Activate node ${NODE_NAME}"
      curl -s -XPUT -H 'Content-Type: application/json' "http://RELEASE-NAME-elasticsearch-client:9200/_cluster/settings" -d "{
        \"transient\" :{
            \"cluster.routing.allocation.exclude._name\" : null
        }
      }"
    fi
    echo "Node ${NODE_NAME} is ready to be used"

---
# Source: elastic-stack/charts/kibana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-kibana
  labels:
    app: kibana
    chart: "kibana-0.20.0"
    release: RELEASE-NAME
    heritage: Tiller
data:
  kibana.yml: |
    elasticsearch.url: http://elasticsearch:9200
    server.host: "0"
    server.name: kibana
    
---
# Source: elastic-stack/charts/logstash/templates/patterns-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-logstash-patterns
  labels:
    app: logstash
    chart: logstash-1.3.0
    release: RELEASE-NAME
    heritage: Tiller
data:

---
# Source: elastic-stack/charts/logstash/templates/pipeline-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-logstash-pipeline
  labels:
    app: logstash
    chart: logstash-1.3.0
    release: RELEASE-NAME
    heritage: Tiller
data:
  input_main: |-
    input {
      # udp {
      #   port => 1514
      #   type => syslog
      # }
      # tcp {
      #   port => 1514
      #   type => syslog
      # }
      beats {
        port => 5044
      }
      # http {
      #   port => 8080
      # }
      # kafka {
      #   ## ref: https://www.elastic.co/guide/en/logstash/current/plugins-inputs-kafka.html
      #   bootstrap_servers => "kafka-input:9092"
      #   codec => json { charset => "UTF-8" }
      #   consumer_threads => 1
      #   topics => ["source"]
      #   type => "example"
      # }
    }
  output_main: |-
    output {
      # stdout { codec => rubydebug }
      elasticsearch {
        hosts => ["${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"]
        manage_template => false
        index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
        document_type => "%{[@metadata][type]}"
      }
      # kafka {
      #   ## ref: https://www.elastic.co/guide/en/logstash/current/plugins-outputs-kafka.html
      #   bootstrap_servers => "kafka-output:9092"
      #   codec => json { charset => "UTF-8" }
      #   compression_type => "lz4"
      #   topic_id => "destination"
      # }
    }

---
# Source: elastic-stack/charts/elasticsearch/templates/client-serviceaccount.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: elasticsearch
    chart: elasticsearch-1.14.2
    component: "client"
    heritage: Tiller
    release: RELEASE-NAME
  name: RELEASE-NAME-elasticsearch-client

---
# Source: elastic-stack/charts/elasticsearch/templates/data-serviceaccount.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: elasticsearch
    chart: elasticsearch-1.14.2
    component: "data"
    heritage: Tiller
    release: RELEASE-NAME
  name: RELEASE-NAME-elasticsearch-data

---
# Source: elastic-stack/charts/elasticsearch/templates/master-serviceaccount.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: elasticsearch
    chart: elasticsearch-1.14.2
    component: "master"
    heritage: Tiller
    release: RELEASE-NAME
  name: RELEASE-NAME-elasticsearch-master

---
# Source: elastic-stack/charts/elasticsearch/templates/client-svc.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: elasticsearch
    chart: elasticsearch-1.14.2
    component: "client"
    heritage: Tiller
    release: RELEASE-NAME
  name: RELEASE-NAME-elasticsearch-client

spec:
  ports:
    - name: http
      port: 9200
      targetPort: http
  selector:
    app: elasticsearch
    component: "client"
    release: RELEASE-NAME
  type: ClusterIP
  
---
# Source: elastic-stack/charts/elasticsearch/templates/master-svc.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: elasticsearch
    chart: elasticsearch-1.14.2
    component: "master"
    heritage: Tiller
    release: RELEASE-NAME
  name: RELEASE-NAME-elasticsearch-discovery
spec:
  clusterIP: None
  ports:
    - port: 9300
      targetPort: transport
  selector:
    app: elasticsearch
    component: "master"
    release: RELEASE-NAME

---
# Source: elastic-stack/charts/kibana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kibana
    chart: kibana-0.20.0
    release: RELEASE-NAME
    heritage: Tiller
  name: RELEASE-NAME-kibana
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 5601
      protocol: TCP

  selector:
    app: kibana
    release: RELEASE-NAME

---
# Source: elastic-stack/charts/logstash/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-logstash
  labels:
    app: logstash
    chart: logstash-1.3.0
    release: RELEASE-NAME
    heritage: Tiller
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: beats
      port: 5044
      protocol: TCP
      targetPort: beats
      
  selector:
    app: logstash
    release: RELEASE-NAME


---
# Source: elastic-stack/charts/elasticsearch/templates/client-deployment.yaml
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    app: elasticsearch
    chart: elasticsearch-1.14.2
    component: "client"
    heritage: Tiller
    release: RELEASE-NAME
  name: RELEASE-NAME-elasticsearch-client
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: elasticsearch
        component: "client"
        release: RELEASE-NAME
    spec:
      serviceAccountName: RELEASE-NAME-elasticsearch-client
      securityContext:
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: "elasticsearch"
                  release: "RELEASE-NAME"
                  component: "client"
      initContainers:
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html
      # and https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration-memory.html#mlockall
      - name: "sysctl"
        image: "busybox:latest"
        imagePullPolicy: "Always"
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch
        env:
        - name: NODE_DATA
          value: "false"
        - name: NODE_MASTER
          value: "false"
        - name: DISCOVERY_SERVICE
          value: RELEASE-NAME-elasticsearch-discovery
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: ES_JAVA_OPTS
          value: "-Djava.net.preferIPv4Stack=true -Xms512m -Xmx512m "
        - name: MINIMUM_MASTER_NODES
          value: "2"
        resources:
            limits:
              cpu: "1"
            requests:
              cpu: 25m
              memory: 512Mi
            
        readinessProbe:
          httpGet:
            path: /_cluster/health
            port: 9200
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            path: /_cluster/health?local=true
            port: 9200
          initialDelaySeconds: 90
        image: "docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.1"
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 9200
          name: http
        - containerPort: 9300
          name: transport
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          name: config
          subPath: elasticsearch.yml
      volumes:
      - name: config
        configMap:
          name: RELEASE-NAME-elasticsearch

---
# Source: elastic-stack/charts/kibana/templates/deployment.yaml
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    app: kibana
    chart: "kibana-0.20.0"
    heritage: Tiller
    release: RELEASE-NAME
  name: RELEASE-NAME-kibana
spec:
  replicas: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      annotations:
        checksum/config: 6016a26b6a2acc46e64843caf24ca5f53be0c313d63afd4f8ee2b07c48d3154a
      labels:
        app: kibana
        release: "RELEASE-NAME"
    spec:
      serviceAccountName: default
      containers:
      - name: kibana
        image: "docker.elastic.co/kibana/kibana-oss:6.5.0"
        imagePullPolicy: IfNotPresent
        env:
        - name: "ELASTICSEARCH_URL"
          value: "http://http.default.svc.cluster.local:9200"
        ports:
        - containerPort: 5601
          name: kibana
          protocol: TCP
        resources:
          {}
          
        volumeMounts:
        - name: kibana
          mountPath: "/usr/share/kibana/config/kibana.yml"
          subPath: kibana.yml
      tolerations:
        []
        
      volumes:
        - name: kibana
          configMap:
            name: RELEASE-NAME-kibana

---
# Source: elastic-stack/charts/elasticsearch/templates/data-statefulset.yaml
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    app: elasticsearch
    chart: elasticsearch-1.14.2
    component: "data"
    heritage: Tiller
    release: RELEASE-NAME
  name: RELEASE-NAME-elasticsearch-data
spec:
  serviceName: RELEASE-NAME-elasticsearch-data
  replicas: 2
  template:
    metadata:
      labels:
        app: elasticsearch
        component: "data"
        release: RELEASE-NAME
    spec:
      serviceAccountName: RELEASE-NAME-elasticsearch-data
      securityContext:
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: "elasticsearch"
                  release: "RELEASE-NAME"
                  component: "data"
      initContainers:
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html
      # and https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration-memory.html#mlockall
      - name: "sysctl"
        image: "busybox:latest"
        imagePullPolicy: "Always"
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      - name: "chown"
        image: "docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.1"
        imagePullPolicy: "IfNotPresent"
        command:
        - /bin/bash
        - -c
        - chown -R elasticsearch:elasticsearch /usr/share/elasticsearch/data &&
          chown -R elasticsearch:elasticsearch /usr/share/elasticsearch/logs
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: data
      containers:
      - name: elasticsearch
        env:
        - name: DISCOVERY_SERVICE
          value: RELEASE-NAME-elasticsearch-discovery
        - name: NODE_MASTER
          value: "false"
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: ES_JAVA_OPTS
          value: "-Djava.net.preferIPv4Stack=true -Xms1536m -Xmx1536m "
        - name: MINIMUM_MASTER_NODES
          value: "2"
        image: "docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.1"
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 9300
          name: transport

        resources:
            limits:
              cpu: "1"
            requests:
              cpu: 25m
              memory: 1536Mi
            
        readinessProbe:
          httpGet:
            path: /_cluster/health?local=true
            port: 9200
          initialDelaySeconds: 5
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: data
        - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          name: config
          subPath: elasticsearch.yml
        - name: config
          mountPath: /pre-stop-hook.sh
          subPath: pre-stop-hook.sh
        - name: config
          mountPath: /post-start-hook.sh
          subPath: post-start-hook.sh
        lifecycle:
          preStop:
            exec:
              command: ["/bin/bash","/pre-stop-hook.sh"]
          postStart:
            exec:
              command: ["/bin/bash","/post-start-hook.sh"]
      terminationGracePeriodSeconds: 3600
      volumes:
      - name: config
        configMap:
          name: RELEASE-NAME-elasticsearch
  updateStrategy:
    type: OnDelete
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: "30Gi"

---
# Source: elastic-stack/charts/elasticsearch/templates/master-statefulset.yaml
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    app: elasticsearch
    chart: elasticsearch-1.14.2
    component: "master"
    heritage: Tiller
    release: RELEASE-NAME
  name: RELEASE-NAME-elasticsearch-master
spec:
  serviceName: RELEASE-NAME-elasticsearch-master
  replicas: 3
  template:
    metadata:
      labels:
        app: elasticsearch
        component: "master"
        release: RELEASE-NAME
    spec:
      serviceAccountName: RELEASE-NAME-elasticsearch-master
      securityContext:
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: "elasticsearch"
                  release: "RELEASE-NAME"
                  component: "master"
      initContainers:
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html
      # and https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration-memory.html#mlockall
      - name: "sysctl"
        image: "busybox:latest"
        imagePullPolicy: "Always"
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      - name: "chown"
        image: "docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.1"
        imagePullPolicy: "IfNotPresent"
        command:
        - /bin/bash
        - -c
        - chown -R elasticsearch:elasticsearch /usr/share/elasticsearch/data &&
          chown -R elasticsearch:elasticsearch /usr/share/elasticsearch/logs
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: data
      containers:
      - name: elasticsearch
        env:
        - name: NODE_DATA
          value: "false"
        - name: DISCOVERY_SERVICE
          value: RELEASE-NAME-elasticsearch-discovery
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: ES_JAVA_OPTS
          value: "-Djava.net.preferIPv4Stack=true -Xms512m -Xmx512m "
        - name: MINIMUM_MASTER_NODES
          value: "2"
        resources:
            limits:
              cpu: "1"
            requests:
              cpu: 25m
              memory: 512Mi
            
        readinessProbe:
          httpGet:
            path: /_cluster/health?local=true
            port: 9200
          initialDelaySeconds: 5
        image: "docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.1"
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 9300
          name: transport

        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: data
        - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          name: config
          subPath: elasticsearch.yml
      volumes:
      - name: config
        configMap:
          name: RELEASE-NAME-elasticsearch
  updateStrategy:
    type: OnDelete
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: "4Gi"
  

---
# Source: elastic-stack/charts/logstash/templates/statefulset.yaml
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: RELEASE-NAME-logstash
  labels:
    app: logstash
    chart: logstash-1.3.0
    release: RELEASE-NAME
    heritage: Tiller
spec:
  serviceName: RELEASE-NAME-logstash
  replicas: 1
  selector:
    matchLabels:
      app: logstash
      release: RELEASE-NAME
  template:
    metadata:
      labels:
        app: logstash
        release: RELEASE-NAME
      annotations:
        checksum/patterns: 96a839094d39baf64191eba4c59a4392a862e5d97245b83e7b530ef1a43e3aa5
        checksum/pipeline: 025126fab55c203ebeb3458254c4480376d0b1539b56a70dcb7797075667e70f
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      containers:

        ## logstash
        - name: logstash
          image: "docker.elastic.co/logstash/logstash-oss:6.5.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: monitor
              containerPort: 9600
              protocol: TCP
            - containerPort: 5044
              name: beats
              protocol: TCP
            
          livenessProbe:
            httpGet:
              path: /
              port: monitor
            initialDelaySeconds: 20
            
          readinessProbe:
            httpGet:
              path: /
              port: monitor
            initialDelaySeconds: 20
            
          env:
            ## Logstash monitoring API host and port env vars
            - name: HTTP_HOST
              value: "0.0.0.0"
            - name: HTTP_PORT
              value: "9600"
            ## Elasticsearch output
            - name: ELASTICSEARCH_HOST
              value: "elasticsearch-client.default.svc.cluster.local"
            - name: ELASTICSEARCH_PORT
              value: "9200"
            ## Additional env vars
            - name: CONFIG_RELOAD_AUTOMATIC
              value: "true"
            - name: PATH_CONFIG
              value: "/usr/share/logstash/pipeline"
            - name: PATH_DATA
              value: "/usr/share/logstash/data"
            - name: QUEUE_CHECKPOINT_WRITES
              value: "1"
            - name: QUEUE_DRAIN
              value: "true"
            - name: QUEUE_MAX_BYTES
              value: "1gb"
            - name: QUEUE_TYPE
              value: "persisted"
          resources:
            {}
            
          volumeMounts:
            - mountPath: /usr/share/logstash/data
              name: data
            - mountPath: /usr/share/logstash/patterns
              name: patterns
            - mountPath: /usr/share/logstash/pipeline
              name: pipeline
            
      terminationGracePeriodSeconds: 30
      volumes:
        - name: patterns
          configMap:
            name: RELEASE-NAME-logstash-patterns
        - name: pipeline
          configMap:
            name: RELEASE-NAME-logstash-pipeline
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "2Gi"

---
# Source: elastic-stack/charts/logstash/templates/poddisruptionbudget.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: RELEASE-NAME-logstash
  labels:
    app: logstash
    chart: logstash-1.3.0
    release: RELEASE-NAME
    heritage: Tiller
spec:
  selector:
    matchLabels:
      app: logstash
      release: RELEASE-NAME
  maxUnavailable: 1
  

---
# Source: elastic-stack/charts/elasticsearch/templates/client-pdb.yaml


---
# Source: elastic-stack/charts/elasticsearch/templates/data-pdb.yaml


---
# Source: elastic-stack/charts/elasticsearch/templates/master-pdb.yaml


---
# Source: elastic-stack/charts/elasticsearch/templates/podsecuritypolicy.yaml


---
# Source: elastic-stack/charts/elasticsearch/templates/role.yaml


---
# Source: elastic-stack/charts/elasticsearch/templates/rolebinding.yaml



---
# Source: elastic-stack/charts/kibana/templates/configmap-dashboardimport.yaml

---
# Source: elastic-stack/charts/kibana/templates/ingress.yaml

---
# Source: elastic-stack/charts/kibana/templates/serviceaccount.yaml

---
# Source: elastic-stack/charts/kibana/templates/volume-claim.yaml

---
# Source: elastic-stack/charts/logstash/templates/ingress.yaml



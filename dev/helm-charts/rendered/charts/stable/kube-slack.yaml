---
# Source: kube-slack/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: RELEASE-NAME-kube-slack
  labels:
    app: kube-slack
    chart: kube-slack-0.4.0
    release: RELEASE-NAME
    heritage: Tiller
---
# Source: kube-slack/templates/clusterrole.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: ClusterRole
metadata:
  name: RELEASE-NAME-kube-slack
  labels:
    app: kube-slack
    chart: kube-slack-0.4.0
    release: RELEASE-NAME
    heritage: Tiller
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
---
# Source: kube-slack/templates/clusterrolebinding.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: ClusterRoleBinding
metadata:
  name: RELEASE-NAME-kube-slack
  labels:
    app: kube-slack
    chart: kube-slack-0.4.0
    release: RELEASE-NAME
    heritage: Tiller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: RELEASE-NAME-kube-slack
subjects:
  - kind: ServiceAccount
    name: RELEASE-NAME-kube-slack
    namespace: hub
---
# Source: kube-slack/templates/deployment.yaml
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: RELEASE-NAME-kube-slack
  labels:
    app: kube-slack
    chart: kube-slack-0.4.0
    release: RELEASE-NAME
    heritage: Tiller
spec:
  replicas: 
  selector:
    matchLabels:
      app: kube-slack
      release: RELEASE-NAME
  template:
    metadata:
      labels:
        app: kube-slack
        release: RELEASE-NAME
    spec:
      containers:
        - name: kube-slack
          image: "willwill/kube-slack:v3.6.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: SLACK_URL
              value: 
            - name: NOT_READY_MIN_TIME
              value: "60000"
          resources:
            {}
            
      serviceAccountName: RELEASE-NAME-kube-slack


---
# Source: kibana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-kibana
  labels:
    app: kibana
    chart: "kibana-1.0.2"
    release: RELEASE-NAME
    heritage: Tiller
data:
  kibana.yml: |
    elasticsearch.url: http://elasticsearch:9200
    server.host: "0"
    server.name: kibana
    
---
# Source: kibana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kibana
    chart: kibana-1.0.2
    release: RELEASE-NAME
    heritage: Tiller
  name: RELEASE-NAME-kibana
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 5601
      protocol: TCP

  selector:
    app: kibana
    release: RELEASE-NAME

---
# Source: kibana/templates/deployment.yaml
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    app: kibana
    chart: "kibana-1.0.2"
    heritage: Tiller
    release: RELEASE-NAME
  name: RELEASE-NAME-kibana
spec:
  replicas: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      annotations:
        checksum/config: 468bb6b26f7043c6a9604b747c79168be88e73d3df19a507b3e93cdc0c52ee92
      labels:
        app: kibana
        release: "RELEASE-NAME"
    spec:
      serviceAccountName: default
      containers:
      - name: kibana
        image: "docker.elastic.co/kibana/kibana-oss:6.5.1"
        imagePullPolicy: IfNotPresent
        env:
        ports:
        - containerPort: 5601
          name: kibana
          protocol: TCP
        resources:
          {}
          
        volumeMounts:
        - name: kibana
          mountPath: "/usr/share/kibana/config/kibana.yml"
          subPath: kibana.yml
      tolerations:
        []
        
      volumes:
        - name: kibana
          configMap:
            name: RELEASE-NAME-kibana

---
# Source: kibana/templates/configmap-dashboardimport.yaml

---
# Source: kibana/templates/ingress.yaml

---
# Source: kibana/templates/serviceaccount.yaml

---
# Source: kibana/templates/volume-claim.yaml


---
# Source: rabbitmq-ha/templates/secret.yaml

apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-rabbitmq-ha
  labels:
    app: rabbitmq-ha
    chart: "rabbitmq-ha-1.14.0"
    release: "RELEASE-NAME"
    heritage: "Tiller"
type: Opaque
data:
  rabbitmq-username: "Z3Vlc3Q="
  rabbitmq-password: "NjFoM2xhRzFxWW85ZjVzY0VWWTFxcVpz"
  rabbitmq-erlang-cookie: "WDR0N1NmMnN6N3NpakRvMXlpdmlJNVJsbEV5MkdyNno="
  definitions.json: "ewogICJ1c2VycyI6IFsKICAgIHsKICAgICAgIm5hbWUiOiAibWFuYWdlbWVudCIsCiAgICAgICJwYXNzd29yZCI6ICJFOVIzZmpabTRlakZrVkZFIiwKICAgICAgInRhZ3MiOiAibWFuYWdlbWVudCIKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImd1ZXN0IiwKICAgICAgInBhc3N3b3JkIjogIjYxaDNsYUcxcVlvOWY1c2NFVlkxcXFacyIsCiAgICAgICJ0YWdzIjogImFkbWluaXN0cmF0b3IiCiAgICB9CiAgXSwKICAidmhvc3RzIjogWwogICAgewogICAgICAibmFtZSI6ICIvIgogICAgfQogIF0sCiAgInBlcm1pc3Npb25zIjogWwogICAgewogICAgICAidXNlciI6ICJndWVzdCIsCiAgICAgICJ2aG9zdCI6ICIvIiwKICAgICAgImNvbmZpZ3VyZSI6ICIuKiIsCiAgICAgICJyZWFkIjogIi4qIiwKICAgICAgIndyaXRlIjogIi4qIgogICAgfQogIF0sCiAgInBhcmFtZXRlcnMiOiBbCiAgICAKICBdLAogICJwb2xpY2llcyI6IFsKICAgIAogIF0sCiAgInF1ZXVlcyI6IFsKICAgIAogIF0sCiAgImV4Y2hhbmdlcyI6IFsKICAgIAogIF0sCiAgImJpbmRpbmdzIjogWwogICAgCiAgXQp9"


---
# Source: rabbitmq-ha/templates/configmap.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-rabbitmq-ha
  labels:
    app: rabbitmq-ha
    chart: rabbitmq-ha-1.14.0
    release: RELEASE-NAME
    heritage: Tiller
data:
  enabled_plugins: |
    [

      rabbitmq_consistent_hash_exchange,
      rabbitmq_federation,
      rabbitmq_federation_management,
      rabbitmq_management,
      rabbitmq_peer_discovery_k8s,
      rabbitmq_shovel,
      rabbitmq_shovel_management
    ].

  rabbitmq.conf: |
    ## RabbitMQ configuration
    ## Ref: https://github.com/rabbitmq/rabbitmq-server/blob/master/docs/rabbitmq.conf.example

    ## Authentification

    ## Clustering
    cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
    cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
    cluster_formation.k8s.address_type = hostname
    cluster_formation.node_cleanup.interval = 10
    # Set to false if automatic cleanup of absent nodes is desired.
    # This can be dangerous, see http://www.rabbitmq.com/cluster-formation.html#node-health-checks-and-cleanup.
    cluster_formation.node_cleanup.only_log_warning = true
    cluster_partition_handling = autoheal

    ## The default "guest" user is only permitted to access the server
    ## via a loopback interface (e.g. localhost)
    loopback_users.guest = false

    management.load_definitions = /etc/definitions/definitions.json

    ## Memory-based Flow Control threshold
    vm_memory_high_watermark.absolute = 256MB

    ## Auth HTTP Backend Plugin

    ## LDAP Plugin

    ## MQTT Plugin

    ## Web MQTT Plugin

    ## STOMP Plugin

    ## Web STOMP Plugin

    ## AMQPS support

    

---
# Source: rabbitmq-ha/templates/serviceaccount.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: rabbitmq-ha
    chart: "rabbitmq-ha-1.14.0"
    release: "RELEASE-NAME"
    heritage: "Tiller"
  name: RELEASE-NAME-rabbitmq-ha

---
# Source: rabbitmq-ha/templates/role.yaml

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  labels:
    app: rabbitmq-ha
    chart: "rabbitmq-ha-1.14.0"
    release: "RELEASE-NAME"
    heritage: "Tiller"
  name: RELEASE-NAME-rabbitmq-ha
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get"]

---
# Source: rabbitmq-ha/templates/rolebinding.yaml

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  labels:
    app: rabbitmq-ha
    chart: "rabbitmq-ha-1.14.0"
    release: "RELEASE-NAME"
    heritage: "Tiller"
  name: RELEASE-NAME-rabbitmq-ha
subjects:
  - kind: ServiceAccount
    name: RELEASE-NAME-rabbitmq-ha
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: RELEASE-NAME-rabbitmq-ha

---
# Source: rabbitmq-ha/templates/service-discovery.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: RELEASE-NAME-rabbitmq-ha-discovery
  labels:
    app: rabbitmq-ha
    chart: rabbitmq-ha-1.14.0
    release: RELEASE-NAME
    heritage: Tiller
spec:
  clusterIP: None
  ports:
    - name: http
      protocol: TCP
      port: 15672
      targetPort: http
    - name: amqp
      protocol: TCP
      port: 5672
      targetPort: amqp
    - name: epmd
      protocol: TCP
      port: 4369
      targetPort: epmd
  publishNotReadyAddresses: true
  selector:
    app: rabbitmq-ha
    release: RELEASE-NAME
  type: ClusterIP

---
# Source: rabbitmq-ha/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-rabbitmq-ha
  labels:
    app: rabbitmq-ha
    chart: rabbitmq-ha-1.14.0
    release: RELEASE-NAME
    heritage: Tiller
spec:
  clusterIP: "None"
  ports:
    - name: http
      protocol: TCP
      port: 15672
      targetPort: http
    - name: amqp
      protocol: TCP
      port: 5672
      targetPort: amqp
    - name: epmd
      protocol: TCP
      port: 4369
      targetPort: epmd
    
  selector:
    app: rabbitmq-ha
    release: RELEASE-NAME
  type: ClusterIP

---
# Source: rabbitmq-ha/templates/statefulset.yaml
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: RELEASE-NAME-rabbitmq-ha
  labels:
    app: rabbitmq-ha
    chart: rabbitmq-ha-1.14.0
    release: RELEASE-NAME
    heritage: Tiller
spec:
  podManagementPolicy: OrderedReady
  serviceName: RELEASE-NAME-rabbitmq-ha-discovery
  replicas: 3
  updateStrategy:
    type: OnDelete
  template:
    metadata:
      labels:
        app: rabbitmq-ha
        release: RELEASE-NAME
      annotations:
        checksum/config: a57326eda0d029fae4c8fa6e843ea940d81e78fff9a19b788fc8a9cc31ae41f9
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: RELEASE-NAME-rabbitmq-ha
      initContainers:
        - name: copy-rabbitmq-config
          image: busybox:latest
          imagePullPolicy: Always
          command: ['sh', '-c', 'cp /configmap/* /etc/rabbitmq; rm -f /var/lib/rabbitmq/.erlang.cookie']
          resources:
            {}
            
          volumeMounts:
            - name: configmap
              mountPath: /configmap
            - name: config
              mountPath: /etc/rabbitmq
            - name: data
              mountPath: /var/lib/rabbitmq
      containers:
        - name: rabbitmq-ha
          image: rabbitmq:3.7-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - name: epmd
              protocol: TCP
              containerPort: 4369
            - name: amqp
              protocol: TCP
              containerPort: 5672
            - name: http
              protocol: TCP
              containerPort: 15672
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - 'wget -O - -q --header "Authorization: Basic bWFuYWdlbWVudDpFOVIzZmpabTRlakZrVkZF" http://localhost:15672/api/healthchecks/node | grep -qF "{\"status\":\"ok\"}"'
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - 'wget -O - -q --header "Authorization: Basic bWFuYWdlbWVudDpFOVIzZmpabTRlakZrVkZF" http://localhost:15672/api/healthchecks/node | grep -qF "{\"status\":\"ok\"}"'
            initialDelaySeconds: 20
            timeoutSeconds: 3
            periodSeconds: 5
            failureThreshold: 6
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: RABBITMQ_USE_LONGNAME
              value: "true"
            - name: RABBITMQ_NODENAME
              value: rabbit@$(MY_POD_NAME).RELEASE-NAME-rabbitmq-ha-discovery.hub.svc.cluster.local
            - name: K8S_HOSTNAME_SUFFIX
              value: .RELEASE-NAME-rabbitmq-ha-discovery.hub.svc.cluster.local
            - name: K8S_SERVICE_NAME
              value: RELEASE-NAME-rabbitmq-ha-discovery
            - name: RABBITMQ_ERLANG_COOKIE
              valueFrom:
                secretKeyRef:
                  name: RELEASE-NAME-rabbitmq-ha
                  key: rabbitmq-erlang-cookie
          resources:
            {}
            
          volumeMounts:
            - name: data
              mountPath: /var/lib/rabbitmq
            - name: config
              mountPath: /etc/rabbitmq
              readOnly: true
            - name: definitions
              mountPath: /etc/definitions
              readOnly: true
        
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: rabbitmq-ha
                    release: RELEASE-NAME
      volumes:
        - name: config
          emptyDir: {}
        - name: configmap
          configMap:
            name: RELEASE-NAME-rabbitmq-ha
        - name: definitions
          secret:
            secretName: RELEASE-NAME-rabbitmq-ha
            items:
            - key: definitions.json
              path: definitions.json
        - name: data
          emptyDir: {}

---
# Source: rabbitmq-ha/templates/alerts.yaml


---
# Source: rabbitmq-ha/templates/ingress.yaml


---
# Source: rabbitmq-ha/templates/servicemonitor.yaml



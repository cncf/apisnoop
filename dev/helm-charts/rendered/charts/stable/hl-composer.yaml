---
# Source: hl-composer/templates/hl-composer-rest-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-hl-composer-rest
  labels:
    app: hl-composer
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: hl-composer-1.0.11
type: Opaque
data:
  
  COMPOSER_APIKEY: "bGVkVkVsMXZkWm1rdkNhQld5MDZYOGVw"
  

---
# Source: hl-composer/templates/hl-composer-pg-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-hl-composer-pg
  labels:
    app: hl-composer
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: hl-composer-1.0.11
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    name: RELEASE-NAME-hl-composer-pg
    app: hl-composer
    release: RELEASE-NAME
---
# Source: hl-composer/templates/hl-composer-rest-service.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-hl-composer-rest
  labels:
    app: hl-composer
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: hl-composer-1.0.11
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
      name: http
  selector:
    name: RELEASE-NAME-hl-composer-rest
    app: hl-composer
    release: RELEASE-NAME

---
# Source: hl-composer/templates/hl-composer-cli-deployment.yaml
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-hl-composer-cli
  labels:
    name: RELEASE-NAME-hl-composer-cli
    app: hl-composer
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: hl-composer-1.0.11
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hl-composer
      release: RELEASE-NAME
  template:
    metadata:
      name: RELEASE-NAME-hl-composer-cli
      labels:
        name: RELEASE-NAME-hl-composer-cli
        app: hl-composer
        heritage: "Tiller"
        release: "RELEASE-NAME"
        chart: hl-composer-1.0.11
    spec:
      volumes:
        - name: persistent-volume
          emptyDir: {}
      containers:
        - name: cli
          image: "hyperledger/composer-cli:0.20.0"
          imagePullPolicy: IfNotPresent
        # TODO: Add liveness and readiness probes
        # Run infinitely
          command:
            - sh
            - -c
            - |
              tail -f /dev/null
          volumeMounts:
            - mountPath: /home/composer/.composer
              name: persistent-volume
          resources:
            {}
            

---
# Source: hl-composer/templates/hl-composer-pg-deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-hl-composer-pg
  labels:
    name: RELEASE-NAME-hl-composer-pg
    app: hl-composer
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: hl-composer-1.0.11
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hl-composer
      release: RELEASE-NAME
  template:
    metadata:
      name: RELEASE-NAME-hl-composer-pg
      labels:
        name: RELEASE-NAME-hl-composer-pg
        app: hl-composer
        heritage: "Tiller"
        release: "RELEASE-NAME"
        chart: hl-composer-1.0.11
    spec:
      volumes:
        - name: persistent-volume
          emptyDir: {}
      containers:
        - name: composer-playground
          image: "hyperledger/composer-playground:0.20.0"
          imagePullPolicy: IfNotPresent
          # TODO: Add liveness and readiness probes
          volumeMounts:
            - mountPath: /home/composer/.composer
              name: persistent-volume
          resources:
            {}
            

---
# Source: hl-composer/templates/hl-composer-rest-deployment.yaml
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-hl-composer-rest
  labels:
    name: RELEASE-NAME-hl-composer-rest
    app: hl-composer
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: hl-composer-1.0.11
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hl-composer
      release: RELEASE-NAME
  template:
    metadata:
      name: RELEASE-NAME-hl-composer-rest
      labels:
        name: RELEASE-NAME-hl-composer-rest
        app: hl-composer
        heritage: "Tiller"
        release: "RELEASE-NAME"
        chart: hl-composer-1.0.11
    spec:
      volumes:
        - name: persistent-volume
          emptyDir: {}
      containers:
        - name: rest-server
          image: "hyperledger/composer-rest-server:0.20.0"
          imagePullPolicy: IfNotPresent
          # TODO: Add liveness and readiness probes
          envFrom:
            - secretRef:
                name: RELEASE-NAME-hl-composer-rest
          env:
            - name: COMPOSER_CARD
              value: admin@test-network
            - name: COMPOSER_NAMESPACES
              value: never
          volumeMounts:
            - name: persistent-volume
              mountPath: /home/composer/.composer
          resources:
            {}
            

---
# Source: hl-composer/templates/hl-composer-pg-ingress.yaml


---
# Source: hl-composer/templates/hl-composer-pvc.yaml


---
# Source: hl-composer/templates/hl-composer-rest-ingress.yaml



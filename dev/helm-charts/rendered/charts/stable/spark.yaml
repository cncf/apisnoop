---
# Source: spark/templates/spark-master-deployment.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-master
  labels:
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: "spark-0.2.1"
    component: "RELEASE-NAME-spark-master"
spec:
  ports:
    - port: 7077
      targetPort: 7077
  selector:
    component: "RELEASE-NAME-spark-master"
---
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-webui
  labels:
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: "spark-0.2.1"
    component: "RELEASE-NAME-spark-master"
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    component: "RELEASE-NAME-spark-master"
  type: LoadBalancer
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: RELEASE-NAME-master
  labels:
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: "spark-0.2.1"
    component: "RELEASE-NAME-spark-master"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "RELEASE-NAME-spark-master"
  template:
    metadata:
      labels:
        heritage: "Tiller"
        release: "RELEASE-NAME"
        chart: "spark-0.2.1"
        component: "RELEASE-NAME-spark-master"
    spec:
      containers:
        - name: RELEASE-NAME-master
          image: "k8s.gcr.io/spark:1.5.1_v3"
          command: ["/bin/sh","-c"]
          args: ["echo $(hostname -i) RELEASE-NAME-master >> /etc/hosts; /opt/spark/bin/spark-class org.apache.spark.deploy.master.Master"]
          ports:
            - containerPort: 7077
            - containerPort: 8080
          resources:
            requests:
              cpu: "100m"
              memory: "512Mi"
          env:
          - name: SPARK_DAEMON_MEMORY
            value: "1g"
          - name: SPARK_MASTER_HOST
            value: RELEASE-NAME-master
          - name: SPARK_MASTER_PORT
            value: "7077"
          - name: SPARK_MASTER_WEBUI_PORT
            value: "8080"

---
# Source: spark/templates/spark-zeppelin-deployment.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-zeppelin
  labels:
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: "spark-0.2.1"
    component: "RELEASE-NAME-zeppelin"
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    component: "RELEASE-NAME-zeppelin"
  type: LoadBalancer
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: RELEASE-NAME-zeppelin
  labels:
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: "spark-0.2.1"
    component: "RELEASE-NAME-zeppelin"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "RELEASE-NAME-zeppelin"
  template:
    metadata:
      labels:
        heritage: "Tiller"
        release: "RELEASE-NAME"
        chart: "spark-0.2.1"
        component: "RELEASE-NAME-zeppelin"
    spec:
      containers:
        - name: RELEASE-NAME-zeppelin
          image: "apache/zeppelin:0.7.3"
          ports:
            - containerPort: 8080
              name: http
          resources:
            requests:
              cpu: "100m"
          env:
            - name: SPARK_MASTER
              value: "spark://RELEASE-NAME-master:7077"
          volumeMounts:
      volumes:

---
# Source: spark/templates/spark-sql-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "RELEASE-NAME-sql-test-hujti"
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: RELEASE-NAME-sql-test
      image: k8s.gcr.io/spark:1.5.1_v3
      command: ["/opt/spark/bin/spark-sql", "--master",
                "spark://RELEASE-NAME-master:7077", "-e",
                "show databases;"]
  restartPolicy: Never

---
# Source: spark/templates/spark-worker-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: RELEASE-NAME-worker
  labels:
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: "spark-0.2.1"
    component: "RELEASE-NAME-spark-worker"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "RELEASE-NAME-spark-worker"
  template:
    metadata:
      labels:
        heritage: "Tiller"
        release: "RELEASE-NAME"
        chart: "spark-0.2.1"
        component: "RELEASE-NAME-spark-worker"
    spec:
      containers:
        - name: RELEASE-NAME-worker
          image: "k8s.gcr.io/spark:1.5.1_v3"
          command: ["/opt/spark/bin/spark-class", "org.apache.spark.deploy.worker.Worker", "spark://RELEASE-NAME-master:7077"]
          ports:
            - containerPort: 8081
          resources:
            requests:
              cpu: "100m"
              memory: "512Mi"
          env:
          - name: SPARK_DAEMON_MEMORY
            value: "1g"
          - name: SPARK_WORKER_MEMORY
            value: "1g"
          - name: SPARK_WORKER_WEBUI_PORT
            value: "8080"

---
# Source: spark/templates/spark-worker-hpa.yaml

---
# Source: spark/templates/spark-zeppelin-config-pvc.yaml

---
# Source: spark/templates/spark-zeppelin-ingress.yaml

---
# Source: spark/templates/spark-zeppelin-notebook-pvc.yaml


---
# Source: nats/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: "nats"
    chart: "nats-2.0.1"
    heritage: "Tiller"
    release: "RELEASE-NAME"
  name: RELEASE-NAME-nats
data:
  gnatsd.conf: |-
    listen: 0.0.0.0:4222
    http: 0.0.0.0:8222

    # Authorization for client connections
    authorization {
      user: nats_client
      password: mR0V61ITn6
      timeout:  1
    }

    # Logging options
    debug: false
    trace: false
    logtime: false

    # Pid file
    pid_file: "/tmp/gnatsd.pid"

    # Some system overides


    # Clustering definition
    cluster {
      listen: 0.0.0.0:6222

      # Authorization for cluster connections
      authorization {
        user: nats_cluster
        password: PYkDlWySfk
        timeout:  1
      }

      # Routes are actively solicited and connected to from this server.
      # Other servers can connect to us if they supply the correct credentials
      # in their routes definitions from above
      routes = [
        nats://nats_cluster:PYkDlWySfk@RELEASE-NAME-nats-cluster:6222
      ]
    }

---
# Source: nats/templates/client-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-nats-client
  labels:
    app: "nats"
    chart: "nats-2.0.1"
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  type: ClusterIP
  ports:
    - port: 4222
      targetPort: client
      name: client
  selector:
    app: "nats"
    release: "RELEASE-NAME"

---
# Source: nats/templates/cluster-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-nats-cluster
  labels:
    app: "nats"
    chart: "nats-2.0.1"
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  type: ClusterIP
  ports:
    - port: 6222
      targetPort: cluster
      name: cluster
  selector:
    app: "nats"
    release: "RELEASE-NAME"

---
# Source: nats/templates/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-nats-headless
  labels:
    app: nats
    chart: nats-2.0.1
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: client
    port: 4222
    targetPort: client
  - name: cluster
    port: 6222
    targetPort: cluster
  selector:
    app: nats
    release: "RELEASE-NAME"
---
# Source: nats/templates/monitoring-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-nats-monitoring
  labels:
    app: "nats"
    chart: "nats-2.0.1"
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  type: ClusterIP
  ports:
    - port: 8222
      targetPort: monitoring
      name: monitoring
  selector:
    app: "nats"
    release: "RELEASE-NAME"

---
# Source: nats/templates/statefulset.yaml
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: RELEASE-NAME-nats
  labels:
    app: "nats"
    chart: "nats-2.0.1"
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  serviceName: RELEASE-NAME-nats-headless
  replicas: 1
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      app: "nats"
      release: "RELEASE-NAME"
  template:
    metadata:
      labels:
        app: "nats"
        chart: "nats-2.0.1"
        release: "RELEASE-NAME"
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: "nats"
                  release: "RELEASE-NAME"
      containers:
      - name: nats
        image: docker.io/bitnami/nats:1.3.0
        imagePullPolicy: Always
        command:
        - gnatsd
        args:
        - -c
        - /opt/bitnami/nats/gnatsd.conf
        ports:
        - name: client
          containerPort: 4222
        - name: cluster
          containerPort: 6222
        - name: monitoring
          containerPort: 8222
        livenessProbe:
          httpGet:
            path: /
            port: monitoring
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /
            port: monitoring
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        resources:
          {}
          
        volumeMounts:
          - name: config
            mountPath: /opt/bitnami/nats/gnatsd.conf
            subPath: gnatsd.conf
      volumes:
      - name: config
        configMap:
          name: RELEASE-NAME-nats

---
# Source: nats/templates/ingress.yaml


---
# Source: nats/templates/networkpolicy.yaml


---
# Source: nats/templates/tls-secret.yaml



---
# Source: metrics-server/templates/metrics-server-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: RELEASE-NAME-metrics-server
  labels:
    app: metrics-server
    chart: metrics-server-2.0.4
    release: RELEASE-NAME
    heritage: Tiller
---
# Source: metrics-server/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:RELEASE-NAME-metrics-server
  labels:
    app: metrics-server
    chart: metrics-server-2.0.4
    release: RELEASE-NAME
    heritage: Tiller
rules:
  - apiGroups:
    - ""
    resources:
      - pods
      - nodes
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
    - ""
    resources:
    - nodes/stats
    verbs:
    - get
    - create
---
# Source: metrics-server/templates/auth-delegator-crb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: RELEASE-NAME-metrics-server:system:auth-delegator
  namespace: kube-system
  labels:
    app: metrics-server
    chart: metrics-server-2.0.4
    release: RELEASE-NAME
    heritage: Tiller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: RELEASE-NAME-metrics-server
    namespace: hub
---
# Source: metrics-server/templates/metrics-server-crb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:RELEASE-NAME-metrics-server
  labels:
    app: metrics-server
    chart: metrics-server-2.0.4
    release: RELEASE-NAME
    heritage: Tiller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:RELEASE-NAME-metrics-server
subjects:
  - kind: ServiceAccount
    name: RELEASE-NAME-metrics-server
    namespace: hub
---
# Source: metrics-server/templates/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: RELEASE-NAME-metrics-server-auth-reader
  namespace: kube-system
  labels:
    app: metrics-server
    chart: metrics-server-2.0.4
    release: RELEASE-NAME
    heritage: Tiller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    name: RELEASE-NAME-metrics-server
    namespace: hub
---
# Source: metrics-server/templates/metric-server-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-metrics-server
  labels:
    app: metrics-server
    chart: metrics-server-2.0.4
    release: RELEASE-NAME
    heritage: Tiller
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 443
  selector:
    app: metrics-server
    release: RELEASE-NAME

---
# Source: metrics-server/templates/metrics-server-deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-metrics-server
  labels:
    app: metrics-server
    chart: metrics-server-2.0.4
    release: RELEASE-NAME
    heritage: Tiller
spec:
  selector:
    matchLabels:
      app: metrics-server
      release: RELEASE-NAME
  template:
    metadata:
      labels:
        app: metrics-server
        release: RELEASE-NAME
    spec:
      serviceAccountName: RELEASE-NAME-metrics-server
      containers:
        - name: metrics-server
          image: "gcr.io/google_containers/metrics-server-amd64:v0.3.1"
          imagePullPolicy: IfNotPresent
          command:
            - /metrics-server
            - "--logtostderr"

---
# Source: metrics-server/templates/metrics-api-service.yaml
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1beta1.metrics.k8s.io
  labels:
    app: metrics-server
    chart: metrics-server-2.0.4
    release: RELEASE-NAME
    heritage: Tiller
spec:
  service:
    name: RELEASE-NAME-metrics-server
    namespace: hub
  group: metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100

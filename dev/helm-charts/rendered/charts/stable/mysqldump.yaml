---
# Source: mysqldump/templates/mysqldump-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "RELEASE-NAME-mysqldump"
  labels:
    app: mysqldump
    chart: mysqldump-1.0.0
    release: "RELEASE-NAME"
    heritage: "Tiller"
type: Opaque
data:
---
# Source: mysqldump/templates/mysqldump-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-mysqldump
  labels:
    app: mysqldump
    chart: mysqldump-1.0.0
    release: "RELEASE-NAME"
    heritage: "Tiller"
data:
  MYSQL_HOST: 
  MYSQL_USERNAME: "root"
  MYSQL_PORT: "3306"
  MYSQL_OPTS: "--opt --skip-lock-tables --skip-add-locks --all-databases"

---
# Source: mysqldump/templates/mysqldump-script.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-mysqldump-script
  labels:
    app: mysqldump
    chart: mysqldump-1.0.0
    release: "RELEASE-NAME"
    heritage: "Tiller"
data:
  backup.sh: |-
    if [[ -z ${MYSQL_HOST} ]]; then
      echo "no MySQL host specified.  Nothing to do here."
      exit 0
    fi
    echo "Backing up database"
    DATE=$(date +%Y%m%d%H%M%S)
    echo "started" > /backup/${DATE}.state
    [[ -n ${MYSQL_USERNAME} ]] && USER="--user=${MYSQL_USERNAME}"
    [[ -n ${MYSQL_PASSWORD} ]] && PASS="--password=${MYSQL_PASSWORD}"
    [[ -n ${MYSQL_HOST} ]] && HOST="--host=${MYSQL_HOST}"
    [[ -n ${MYSQL_PORT} ]] && PORT="--port=${MYSQL_PORT}"
    CREDS="${USER} ${PASS} ${HOST} ${PORT}"
    mysqldump ${CREDS} ${MYSQL_OPTS} > /backup/${DATE}.sql
    rc=$?
    if [[ $rc != 0 ]]; then
      echo "backup failed"
      exit 1
    fi
    echo "complete" > /backup/${DATE}.state
    echo "backup complete - /backup/${DATE}.sql"
---
# Source: mysqldump/templates/mysqldump-pvc.yaml

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: RELEASE-NAME-mysqldump
  labels:
    app: mysqldump
    chart: mysqldump-1.0.0
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 8Gi
---
# Source: mysqldump/templates/mysqldump-cron.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: RELEASE-NAME-mysqldump
  labels:
    app: mysqldump
    chart: mysqldump-1.0.0
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  schedule: "0/5 * * * *"
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 5
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      labels:
        app: mysqldump
        chart: mysqldump-1.0.0
        cronjob-name: RELEASE-NAME-mysqldump
        release: "RELEASE-NAME"
        heritage: "Tiller"
    spec:
      backoffLimit: 1
      template:
        spec:
          containers:
          - name: xtrabackup
            image: "mysql:5.7.21"
            imagePullPolicy: "IfNotPresent"
            command: ["/bin/bash", "/scripts/backup.sh"]
            envFrom:
            - configMapRef:
                name: "RELEASE-NAME-mysqldump"
            - secretRef:
                name: "RELEASE-NAME-mysqldump"
            volumeMounts:
            - name: backups
              mountPath: /backup
            - name: xtrabackup-script
              mountPath: /scripts
          restartPolicy: Never
          volumes:
          - name: backups
            persistentVolumeClaim:
              claimName: RELEASE-NAME-mysqldump
          - name: xtrabackup-script
            configMap:
              name: RELEASE-NAME-mysqldump-script
        
---
# Source: mysqldump/templates/mysqldump-job.yaml


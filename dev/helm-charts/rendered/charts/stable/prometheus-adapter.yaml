---
# Source: prometheus-adapter/templates/custom-metrics-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-prometheus-adapter
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-v0.2.1
    release: RELEASE-NAME
    heritage: Tiller
data:
  config.yaml: |
    rules:
    - seriesQuery: '{__name__=~"^container_.*",container_name!="POD",namespace!="",pod_name!=""}'
      seriesFilters: []
      resources:
        overrides:
          namespace:
            resource: namespace
          pod_name:
            resource: pod
      name:
        matches: ^container_(.*)_seconds_total$
        as: ""
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container_name!="POD"}[5m]))
        by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^container_.*",container_name!="POD",namespace!="",pod_name!=""}'
      seriesFilters:
      - isNot: ^container_.*_seconds_total$
      resources:
        overrides:
          namespace:
            resource: namespace
          pod_name:
            resource: pod
      name:
        matches: ^container_(.*)_total$
        as: ""
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container_name!="POD"}[5m]))
        by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^container_.*",container_name!="POD",namespace!="",pod_name!=""}'
      seriesFilters:
      - isNot: ^container_.*_total$
      resources:
        overrides:
          namespace:
            resource: namespace
          pod_name:
            resource: pod
      name:
        matches: ^container_(.*)$
        as: ""
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,container_name!="POD"}) by (<<.GroupBy>>)
    - seriesQuery: '{namespace!="",__name__!~"^container_.*"}'
      seriesFilters:
      - isNot: .*_total$
      resources:
        template: <<.Resource>>
      name:
        matches: ""
        as: ""
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)
    - seriesQuery: '{namespace!="",__name__!~"^container_.*"}'
      seriesFilters:
      - isNot: .*_seconds_total
      resources:
        template: <<.Resource>>
      name:
        matches: ^(.*)_total$
        as: ""
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>)
    - seriesQuery: '{namespace!="",__name__!~"^container_.*"}'
      seriesFilters: []
      resources:
        template: <<.Resource>>
      name:
        matches: ^(.*)_seconds_total$
        as: ""
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>)
---
# Source: prometheus-adapter/templates/custom-metrics-apiserver-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-v0.2.1
    release: RELEASE-NAME
    heritage: Tiller
  name: RELEASE-NAME-prometheus-adapter
---
# Source: prometheus-adapter/templates/custom-metrics-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-v0.2.1
    release: RELEASE-NAME
    heritage: Tiller
  name: prometheus-adapter-server-resources
rules:
- apiGroups:
  - custom.metrics.k8s.io
  resources: ["*"]
  verbs: ["*"]
---
# Source: prometheus-adapter/templates/custom-metrics-resource-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-v0.2.1
    release: RELEASE-NAME
    heritage: Tiller
  name: prometheus-adapter-resource-reader
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - services
  - configmaps
  verbs:
  - get
  - list
---
# Source: prometheus-adapter/templates/custom-metrics-apiserver-auth-delegator-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-v0.2.1
    release: RELEASE-NAME
    heritage: Tiller
  name: prometheus-adapter:system:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: RELEASE-NAME-prometheus-adapter
  namespace: "hub"
---
# Source: prometheus-adapter/templates/custom-metrics-apiserver-resource-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-v0.2.1
    release: RELEASE-NAME
    heritage: Tiller
  name: prometheus-adapter-resource-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-adapter-resource-reader
subjects:
- kind: ServiceAccount
  name: RELEASE-NAME-prometheus-adapter
  namespace: "hub"
---
# Source: prometheus-adapter/templates/hpa-custom-metrics-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-v0.2.1
    release: RELEASE-NAME
    heritage: Tiller
  name: prometheus-adapter-hpa-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-adapter-server-resources
subjects:
- kind: ServiceAccount
  name: RELEASE-NAME-prometheus-adapter
  namespace: "hub"
---
# Source: prometheus-adapter/templates/custom-metrics-apiserver-auth-reader-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-v0.2.1
    release: RELEASE-NAME
    heritage: Tiller
  name: prometheus-adapter-auth-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: RELEASE-NAME-prometheus-adapter
  namespace: "hub"
---
# Source: prometheus-adapter/templates/custom-metrics-apiserver-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    {}
    
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-v0.2.1
    release: RELEASE-NAME
    heritage: Tiller
  name: RELEASE-NAME-prometheus-adapter
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: https
  selector:
    app: prometheus-adapter
    release: RELEASE-NAME
  type: ClusterIP


---
# Source: prometheus-adapter/templates/custom-metrics-apiserver-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-v0.2.1
    release: RELEASE-NAME
    heritage: Tiller
  name: RELEASE-NAME-prometheus-adapter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-adapter
      release: RELEASE-NAME
  template:
    metadata:
      labels:
        app: prometheus-adapter
        chart: prometheus-adapter-v0.2.1
        release: RELEASE-NAME
        heritage: Tiller
      name: prometheus-adapter
      annotations:
        checksum/config: c5634c051e7279e1b9ad2d7a3adad14b798191a316689ce163611df3210f13a5
    spec:
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop: ["all"]
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: RELEASE-NAME-prometheus-adapter
      containers:
      - name: prometheus-adapter
        image: "directxman12/k8s-prometheus-adapter-amd64:v0.4.0"
        imagePullPolicy: IfNotPresent
        args:
        - /adapter
        - --secure-port=6443
        - --cert-dir=/tmp/cert
        - --logtostderr=true
        - --prometheus-url=http://prometheus.default.svc:9090
        - --metrics-relist-interval=30s
        - --v=4
        - --config=/etc/adapter/config.yaml
        ports:
        - containerPort: 6443
          name: https
        livenessProbe:
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 30
        readinessProbe:
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 30
        volumeMounts:
        - mountPath: /etc/adapter/
          name: config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: RELEASE-NAME-prometheus-adapter

---
# Source: prometheus-adapter/templates/custom-metrics-apiservice.yaml
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-v0.2.1
    release: RELEASE-NAME
    heritage: Tiller
  name: v1beta1.custom.metrics.k8s.io
spec:
  service:
    name: RELEASE-NAME-prometheus-adapter
    namespace: "hub"
  
  group: custom.metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100

---
# Source: prometheus-adapter/templates/secret.yaml


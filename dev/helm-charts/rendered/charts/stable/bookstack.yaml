---
# Source: bookstack/charts/mariadb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-mariadb
  labels:
    app: "mariadb"
    chart: mariadb-4.4.2
    release: "RELEASE-NAME"
    heritage: "Tiller"
type: Opaque
data:
  mariadb-root-password: "aGM5MHZKMkpvOQ=="
  
  mariadb-password: "MlFBZW8xTVAydw=="
---
# Source: bookstack/charts/mariadb/templates/initialization-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-mariadb-init-scripts
  labels:
    app: mariadb
    component: "master"
    chart: mariadb-4.4.2
    release: "RELEASE-NAME"
    heritage: "Tiller"
data:
  README.md: |-
    You can copy here your custom .sh, .sql or .sql.gz file so they are executed during the first boot of the image.
  
    More info in the [bitnami-docker-mariadb](https://github.com/bitnami/bitnami-docker-mariadb#initializing-a-new-instance) repository.
  

---
# Source: bookstack/charts/mariadb/templates/master-configmap.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-mariadb
  labels:
    app: mariadb
    component: "master"
    chart: mariadb-4.4.2
    release: "RELEASE-NAME"
    heritage: "Tiller"
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    
    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
# Source: bookstack/charts/mariadb/templates/tests.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-mariadb-tests
data:
  run.sh: |-
    @test "Testing MariaDB is accessible" {
      mysql -h RELEASE-NAME-mariadb -uroot -p$MARIADB_ROOT_PASSWORD -e 'show databases;'
    }

---
# Source: bookstack/templates/storage-pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: RELEASE-NAME-bookstack-storage
  labels:
    app: RELEASE-NAME-bookstack
    chart: "bookstack-0.1.2"
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"

---
# Source: bookstack/templates/uploads-pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: RELEASE-NAME-bookstack-uploads
  labels:
    app: RELEASE-NAME-bookstack
    chart: "bookstack-0.1.2"
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"

---
# Source: bookstack/templates/serviceaccount.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: bookstack
    chart: "bookstack-0.1.2"
    heritage: Tiller
    release: RELEASE-NAME
  name: RELEASE-NAME-bookstack
---
# Source: bookstack/templates/role.yaml

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: RELEASE-NAME-bookstack
  labels:
    app: bookstack
    chart: bookstack-0.1.2
    release: "RELEASE-NAME"
    heritage: "Tiller"
rules:
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["get"]

---
# Source: bookstack/templates/rolebinding.yaml

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: RELEASE-NAME-bookstack
  labels:
    app: bookstack
    chart: bookstack-0.1.2
    release: "RELEASE-NAME"
    heritage: "Tiller"
subjects:
- kind: ServiceAccount
  name: RELEASE-NAME-bookstack
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: RELEASE-NAME-bookstack

---
# Source: bookstack/charts/mariadb/templates/master-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-mariadb
  labels:
    app: "mariadb"
    component: "master"
    chart: mariadb-4.4.2
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  type: ClusterIP
  ports:
  - name: mysql
    port: 3306
    targetPort: mysql
  selector:
    app: "mariadb"
    component: "master"
    release: "RELEASE-NAME"

---
# Source: bookstack/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-bookstack
  labels:
    app: bookstack
    chart: bookstack-0.1.2
    release: RELEASE-NAME
    heritage: Tiller
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: bookstack
    release: RELEASE-NAME

---
# Source: bookstack/charts/mariadb/templates/test-runner.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "RELEASE-NAME-mariadb-test-o5w0b"
  annotations:
    "helm.sh/hook": test-success
spec:
  initContainers:
    - name: "test-framework"
      image: "dduportal/bats:0.4.0"
      command:
        - "bash"
        - "-c"
        - |
          set -ex
          # copy bats to tools dir
          cp -R /usr/local/libexec/ /tools/bats/
      volumeMounts:
      - mountPath: /tools
        name: tools
  containers:
    - name: mariadb-test
      image: "docker.io/bitnami/mariadb:10.1.36-debian-9"
      imagePullPolicy: "IfNotPresent"
      command: ["/tools/bats/bats", "-t", "/tests/run.sh"]
      env:
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-mariadb
              key: mariadb-root-password
      volumeMounts:
      - mountPath: /tests
        name: tests
        readOnly: true
      - mountPath: /tools
        name: tools
  volumes:
  - name: tests
    configMap:
      name: RELEASE-NAME-mariadb-tests
  - name: tools
    emptyDir: {}
  restartPolicy: Never

---
# Source: bookstack/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: RELEASE-NAME-bookstack
  labels:
    app: bookstack
    chart: bookstack-0.1.2
    release: RELEASE-NAME
    heritage: Tiller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bookstack
      release: RELEASE-NAME
  template:
    metadata:
      labels:
        app: bookstack
        release: RELEASE-NAME
    spec:
      serviceAccountName: RELEASE-NAME-bookstack
      containers:
        - name: bookstack
          image: "solidnerd/bookstack:0.24.2"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
            - name: DB_HOST
              value: RELEASE-NAME-mariadb
            - name: DB_DATABASE
              value: "bookstack"
            - name: DB_USERNAME
              value: "bookstack"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: RELEASE-NAME-mariadb
                  key: mariadb-password
          volumeMounts:
          - name: uploads
            mountPath: /var/www/bookstack/public/uploads
          - name: storage
            mountPath: /var/www/bookstack/public/storage
          resources:
            {}
            
      volumes:
        - name: uploads
          persistentVolumeClaim:
            claimName: RELEASE-NAME-bookstack-uploads
        - name: storage
          persistentVolumeClaim:
            claimName: RELEASE-NAME-bookstack-storage
---
# Source: bookstack/charts/mariadb/templates/master-statefulset.yaml
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: RELEASE-NAME-mariadb
  labels:
    app: "mariadb"
    chart: mariadb-4.4.2
    component: "master"
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  serviceName: "RELEASE-NAME-mariadb"
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: "mariadb"
        component: "master"
        release: "RELEASE-NAME"
        chart: mariadb-4.4.2
    spec:
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: "mariadb"
                  release: "RELEASE-NAME"
      containers:
      - name: "mariadb"
        image: docker.io/bitnami/mariadb:10.1.36-debian-9
        imagePullPolicy: "IfNotPresent"
        env:
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-mariadb
              key: mariadb-root-password
        - name: MARIADB_USER
          value: "bookstack"
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-mariadb
              key: mariadb-password
        - name: MARIADB_DATABASE
          value: "bookstack"
        ports:
        - name: mysql
          containerPort: 3306
        livenessProbe:
          exec:
            command: ["sh", "-c", "exec mysqladmin status -uroot -p$MARIADB_ROOT_PASSWORD"]
          initialDelaySeconds: 120
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command: ["sh", "-c", "exec mysqladmin status -uroot -p$MARIADB_ROOT_PASSWORD"]
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        resources:
          {}
          
        volumeMounts:
        - name: data
          mountPath: /bitnami/mariadb
        - name: custom-init-scripts
          mountPath: /docker-entrypoint-initdb.d
        - name: config
          mountPath: /opt/bitnami/mariadb/conf/my.cnf
          subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: RELEASE-NAME-mariadb
        - name: custom-init-scripts
          configMap:
            name: RELEASE-NAME-mariadb-init-scripts
        - name: "data"
          emptyDir: {}
---
# Source: bookstack/charts/mariadb/templates/slave-configmap.yaml


---
# Source: bookstack/charts/mariadb/templates/slave-statefulset.yaml


---
# Source: bookstack/charts/mariadb/templates/slave-svc.yaml


---
# Source: bookstack/templates/app-secrets.yaml


---
# Source: bookstack/templates/externaldb-secrets.yaml

---
# Source: bookstack/templates/ingress.yaml


---
# Source: bookstack/templates/podsecuritypolicy.yaml



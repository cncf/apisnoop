---
# Source: datadog/templates/apikey-secret.yaml


apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-datadog
  labels:
    app: "RELEASE-NAME-datadog"
    chart: "datadog-1.11.2"
    release: "RELEASE-NAME"
    heritage: "Tiller"
type: Opaque
data:
  api-key: "TUlTU0lORw=="

---
# Source: datadog/charts/kube-state-metrics/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: kube-state-metrics
    chart: kube-state-metrics-0.11.0
    heritage: Tiller
    release: RELEASE-NAME
  name: RELEASE-NAME-kube-state-metrics
---
# Source: datadog/templates/serviceaccount.yaml
# You need to use that account for your dd-agent DaemonSet
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: "RELEASE-NAME-datadog"
    chart: "datadog-1.11.2"
    heritage: "Tiller"
    release: "RELEASE-NAME"
  name: RELEASE-NAME-datadog
---
# Source: datadog/charts/kube-state-metrics/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app: kube-state-metrics
    chart: kube-state-metrics-0.11.0
    heritage: Tiller
    release: RELEASE-NAME
  name: RELEASE-NAME-kube-state-metrics
rules:

- apiGroups: ["batch"]
  resources:
  - cronjobs
  verbs: ["list", "watch"]

- apiGroups: ["extensions"]
  resources:
  - daemonsets
  verbs: ["list", "watch"]

- apiGroups: ["extensions"]
  resources:
  - deployments
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - endpoints
  verbs: ["list", "watch"]

- apiGroups: ["autoscaling"]
  resources:
  - horizontalpodautoscalers
  verbs: ["list", "watch"]

- apiGroups: ["batch"]
  resources:
  - jobs
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - limitranges
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - namespaces
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - nodes
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - persistentvolumeclaims
  verbs: ["list", "watch"]


- apiGroups: [""]
  resources:
  - persistentvolumes
  verbs: ["list", "watch"]


- apiGroups: [""]
  resources:
  - pods
  verbs: ["list", "watch"]

- apiGroups: ["extensions"]
  resources:
  - replicasets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - replicationcontrollers
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - resourcequotas
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - services
  verbs: ["list", "watch"]

- apiGroups: ["apps"]
  resources:
  - statefulsets
  verbs: ["list", "watch"]

---
# Source: datadog/templates/clusterrole.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: ClusterRole
metadata:
  labels:
    app: "RELEASE-NAME-datadog"
    chart: "datadog-1.11.2"
    heritage: "Tiller"
    release: "RELEASE-NAME"
  name: RELEASE-NAME-datadog
rules:
- apiGroups:
  - ""
  resources:
  - services
  - events
  - endpoints
  - pods
  - nodes
  - componentstatuses
  verbs:
  - get
  - list
  - watch
- nonResourceURLs:
  - "/version"
  - "/healthz"
  verbs:
  - get
- apiGroups:  # Kubelet connectivity
  - ""
  resources:
  - nodes/metrics
  - nodes/spec
  - nodes/proxy
  verbs:
  - get
---
# Source: datadog/charts/kube-state-metrics/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: kube-state-metrics
    chart: kube-state-metrics-0.11.0
    heritage: Tiller
    release: RELEASE-NAME
  name: RELEASE-NAME-kube-state-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: RELEASE-NAME-kube-state-metrics
subjects:
- kind: ServiceAccount
  name: RELEASE-NAME-kube-state-metrics
  namespace: hub
---
# Source: datadog/templates/clusterrolebinding.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: ClusterRoleBinding
metadata:
  labels:
    app: "RELEASE-NAME-datadog"
    chart: "datadog-1.11.2"
    release: "RELEASE-NAME"
    heritage: "Tiller"
  name: RELEASE-NAME-datadog
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: RELEASE-NAME-datadog
subjects:
  - kind: ServiceAccount
    name: RELEASE-NAME-datadog
    namespace: hub
---
# Source: datadog/charts/kube-state-metrics/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-kube-state-metrics
  labels:
    app: kube-state-metrics
    chart: "kube-state-metrics-0.11.0"
    release: "RELEASE-NAME"
    heritage: "Tiller"
  annotations:
    prometheus.io/scrape: 'true'
spec:
  type: "ClusterIP"
  ports:
  - name: "http"
    protocol: TCP
    port: 8080
    targetPort: 8080
  selector:
    app: kube-state-metrics
    release: RELEASE-NAME

---
# Source: datadog/charts/kube-state-metrics/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: RELEASE-NAME-kube-state-metrics
  labels:
    app: kube-state-metrics
    chart: "kube-state-metrics-0.11.0"
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: kube-state-metrics
        release: "RELEASE-NAME"
    spec:
      serviceAccountName: RELEASE-NAME-kube-state-metrics
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
      containers:
      - name: kube-state-metrics
        args:

        - --collectors=cronjobs


        - --collectors=daemonsets


        - --collectors=deployments


        - --collectors=endpoints


        - --collectors=horizontalpodautoscalers


        - --collectors=jobs


        - --collectors=limitranges


        - --collectors=namespaces


        - --collectors=nodes


        - --collectors=persistentvolumeclaims


        - --collectors=persistentvolumes


        - --collectors=pods


        - --collectors=replicasets


        - --collectors=replicationcontrollers


        - --collectors=resourcequotas


        - --collectors=services


        - --collectors=statefulsets


        imagePullPolicy: IfNotPresent
        image: "quay.io/coreos/kube-state-metrics:v1.4.0"
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        resources:
            null
            


---
# Source: datadog/templates/agent-apiservice.yaml

---
# Source: datadog/templates/agent-clusterrole.yaml

---
# Source: datadog/templates/agent-clusterrolebinding-auth-delegator.yaml

---
# Source: datadog/templates/agent-clusterrolebinding.yaml

---
# Source: datadog/templates/agent-secret.yaml


---
# Source: datadog/templates/agent-service-cmd.yaml


---
# Source: datadog/templates/agent-service-metrics.yaml


---
# Source: datadog/templates/agent-serviceaccount.yaml

---
# Source: datadog/templates/agenthpa-rolebinding.yaml

---
# Source: datadog/templates/appkey-secret.yaml


---
# Source: datadog/templates/checksd-configmap.yaml

---
# Source: datadog/templates/cluster-agent-deployment.yaml


---
# Source: datadog/templates/confd-configmap.yaml

---
# Source: datadog/templates/daemonset.yaml



---
# Source: datadog/templates/deployment.yaml


---
# Source: datadog/templates/hpa-clusterrole.yaml

---
# Source: datadog/templates/hpa-clusterrolebinding.yaml

---
# Source: datadog/templates/service.yaml



---
# Source: efs-provisioner/templates/storageclass.yaml
kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
  name: efs
  labels:
    app: efs-provisioner
    env: dev
    chart: efs-provisioner-0.1.1
    release: "RELEASE-NAME"
    heritage: "Tiller"
provisioner: example.com/aws-efs
parameters:
  gidAllocate: "true"
  gidMin: "40000"
  gidMax: "50000"
reclaimPolicy: Delete

---
# Source: efs-provisioner/templates/serviceaccount.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: RELEASE-NAME-efs-provisioner
  labels:
    app: efs-provisioner
    env: dev
    chart: efs-provisioner-0.1.1
    release: "RELEASE-NAME"
    heritage: "Tiller"

---
# Source: efs-provisioner/templates/clusterrole.yaml

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: RELEASE-NAME-efs-provisioner
  labels:
    app: efs-provisioner
    env: dev
    chart: efs-provisioner-0.1.1
    release: "RELEASE-NAME"
    heritage: "Tiller"
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]

---
# Source: efs-provisioner/templates/clusterrolebinding.yaml

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: RELEASE-NAME-efs-provisioner
  labels:
    app: efs-provisioner
    env: dev
    chart: efs-provisioner-0.1.1
    release: "RELEASE-NAME"
    heritage: "Tiller"
subjects:
  - kind: ServiceAccount
    name: RELEASE-NAME-efs-provisioner
    namespace: hub
roleRef:
  kind: ClusterRole
  name: RELEASE-NAME-efs-provisioner
  apiGroup: rbac.authorization.k8s.io

---
# Source: efs-provisioner/templates/deployment.yaml
kind: Deployment
apiVersion: apps/v1beta2
metadata:
  name: RELEASE-NAME-efs-provisioner
  labels:
    app: efs-provisioner
    env: dev
    chart: efs-provisioner-0.1.1
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: efs-provisioner
      release: "RELEASE-NAME"
  revisionHistoryLimit: 10
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: efs-provisioner
        release: "RELEASE-NAME"
    spec:
      serviceAccount: RELEASE-NAME-efs-provisioner
      containers:
      - name: RELEASE-NAME-efs-provisioner
        image: "quay.io/external_storage/efs-provisioner:v0.1.2"
        imagePullPolicy: IfNotPresent
        env:
        - name: FILE_SYSTEM_ID
          value: fs-12345678
        - name: AWS_REGION
          value: us-east-2
        - name: PROVISIONER_NAME
          value: example.com/aws-efs
        volumeMounts:
        - name: pv-volume
          subPath: example-pv
          mountPath: /persistentvolumes
      initContainers:
      - name: "init-path"
        image: gcr.io/google_containers/busybox:1.27
        imagePullPolicy: IfNotPresent
        command: [ "sh", "-c", "mkdir -p /efs-vol-root/example-pv" ]
        volumeMounts:
        - name: pv-volume
          mountPath: /efs-vol-root
      volumes:
      - name: pv-volume
        nfs:
          server: fs-12345678.efs.us-east-2.amazonaws.com
          path: /


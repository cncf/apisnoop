---
# Source: express-gateway/charts/redis/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-redis
  labels:
    app: redis
    chart: redis-3.0.6
    release: "RELEASE-NAME"
    heritage: "Tiller"
type: Opaque
data:
  redis-password: "ZXhwcmVzcy1nYXRld2F5"
---
# Source: express-gateway/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "RELEASE-NAME-express-gateway"
  labels:
    app: "express-gateway"
    chart: "express-gateway-1.0.1"
    release: "RELEASE-NAME"
    heritage: "Tiller"
data:
  system.config.yml: |-
    db:
      redis:
        emulate: true
        sentinels:
        - host: RELEASE-NAME-redis-master
          port: 6379
        - host: RELEASE-NAME-redis-slave
          port: 6379
        name: RELEASE-NAME-redis-master
        password: express-gateway
        namespace: EG

    cli:
      url: http://localhost:9876

    crypto:
      algorithm: aes256
      cipherKey: sensitiveKey
      saltRounds: 10
      
    session:
      resave: false
      saveUninitialized: false
      secret: keyboard cat
      
    accessTokens:
      timeToExpiry: 7200000
      
    refreshTokens:
      timeToExpiry: 7200000
      
    authorizationCodes:
      timeToExpiry: 300000
      

  gateway.config.yml: |-
    admin:
      port: 9876
      hostname: 0.0.0.0
    https:
      port: 8080
      tls:
        {}
        
    apiEndpoints:
    serviceEndpoints:
    policies:
      - proxy
      - cors
      - expression
      - jwt
      - terminate
    pipelines:

---
# Source: express-gateway/charts/redis/templates/redis-master-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-redis-master
  labels:
    app: redis
    chart: redis-3.0.6
    release: "RELEASE-NAME"
    heritage: "Tiller"
  annotations:
spec:
  type: ClusterIP
  ports:
  - name: redis
    port: 6379
    targetPort: redis
  selector:
    app: redis
    release: "RELEASE-NAME"
    role: master

---
# Source: express-gateway/charts/redis/templates/redis-slave-svc.yaml

apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-redis-slave
  labels:
    app: redis
    chart: redis-3.0.6
    release: "RELEASE-NAME"
    heritage: "Tiller"
  annotations:
spec:
  type: ClusterIP
  ports:
  - name: redis
    port: 6379
    targetPort: redis
  selector:
    app: redis
    release: "RELEASE-NAME"
    role: slave

---
# Source: express-gateway/templates/service-eg-admin.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-express-gateway-admin
  annotations:
  labels:
    app: express-gateway
    chart: "express-gateway-1.0.1"
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  type: NodePort
  ports:
  - name: eg-admin
    port: 9876
    targetPort: 9876
    protocol: TCP
  selector:
    app: express-gateway
    release: RELEASE-NAME

---
# Source: express-gateway/templates/service-eg-proxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-express-gateway-proxy
  annotations:
  labels:
    app: express-gateway
    chart: "express-gateway-1.0.1"
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  type: NodePort
  ports:
  - name: eg-proxy
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: express-gateway
    release: RELEASE-NAME

---
# Source: express-gateway/charts/redis/templates/redis-slave-deployment.yaml

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: RELEASE-NAME-redis-slave
  labels:
    app: redis
    chart: redis-3.0.6
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        release: "RELEASE-NAME"
        role: slave
        app: redis
    spec:      
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      containers:
      - name: RELEASE-NAME-redis
        image: docker.io/bitnami/redis:4.0.9
        imagePullPolicy: "Always"
        env:
        - name: REDIS_REPLICATION_MODE
          value: slave
        - name: REDIS_MASTER_HOST
          value: RELEASE-NAME-redis-master
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_MASTER_PORT_NUMBER
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-redis
              key: redis-password
        - name: REDIS_MASTER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-redis
              key: redis-password
        - name: REDIS_DISABLE_COMMANDS
          value: FLUSHDB,FLUSHALL
        ports:
        - name: redis
          containerPort: 6379        
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - redis-cli
            - ping        
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - redis-cli
            - ping  
        resources:
          null
          

---
# Source: express-gateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "RELEASE-NAME-express-gateway"
  labels:
    app: "express-gateway"
    chart: "express-gateway-1.0.1"
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: express-gateway
      release: RELEASE-NAME
  template:
    metadata:
      labels:
        app: express-gateway
        release: RELEASE-NAME
    spec:
      volumes:
      - configMap:
          name: "RELEASE-NAME-express-gateway"
        name: config
      containers:
      - name: express-gateway
        image: "expressgateway/express-gateway:v1.12.1"
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /var/lib/eg/system.config.yml
          name: config
          subPath: system.config.yml
        - mountPath: /var/lib/eg/gateway.config.yml
          name: config
          subPath: gateway.config.yml
        ports:
        - name: admin
          containerPort: 9876
          protocol: TCP
        - name: proxy
          containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: /users
            port: admin
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          
        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /users
            port: admin
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
          
        resources:
          null
          
      tolerations:
        []
        

---
# Source: express-gateway/charts/redis/templates/redis-master-statefulset.yaml
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: RELEASE-NAME-redis-master
  labels:
    app: redis
    chart: redis-3.0.6
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  selector:
    matchLabels:
      release: "RELEASE-NAME"
      role: master
      app: redis
  serviceName: "redis-master"  
  template:
    metadata:
      labels:
        release: "RELEASE-NAME"
        role: master
        app: redis
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      containers:
      - name: RELEASE-NAME-redis
        image: "docker.io/bitnami/redis:4.0.9"
        imagePullPolicy: "Always"
        env:
        - name: REDIS_REPLICATION_MODE
          value: master
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-redis
              key: redis-password
        - name: REDIS_DISABLE_COMMANDS
          value: FLUSHDB,FLUSHALL
        ports:
        - name: redis
          containerPort: 6379
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - redis-cli
            - ping
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - redis-cli
            - ping
        resources:
          null
          
        volumeMounts:
        - name: redis-data
          mountPath: /bitnami/redis/data
          subPath: 
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          app: "redis"
          chart: redis-3.0.6
          component: "master"
          release: "RELEASE-NAME"
          heritage: "Tiller"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"

---
# Source: express-gateway/charts/redis/templates/metrics-deployment.yaml


---
# Source: express-gateway/charts/redis/templates/networkpolicy.yaml



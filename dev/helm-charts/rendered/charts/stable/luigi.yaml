---
# Source: luigi/charts/mysql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-mysql
  labels:
    app: RELEASE-NAME-mysql
    chart: "mysql-0.3.4"
    release: "RELEASE-NAME"
    heritage: "Tiller"
type: Opaque
data:
  
  mysql-root-password: "NTFJUUQxRXdNVA=="
  
  
  mysql-password: "NlBkd0xOYlgwSg=="
  

---
# Source: luigi/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-luigi
  namespace: hub
  labels:
    app: luigi
    chart: luigi-2.7.4
    release: RELEASE-NAME
    heritage: Tiller
data:
  client.cfg: |
    [core]
    logging_conf_file=/etc/luigi/logging.cfg
    
    [scheduler]
    record_task_history=true
    state-path=/luigi/state/luigi-state.pickle
    
    [task_history]
    db_connection=mysql://luigi-mysql/luigidb
    

  logging.cfg: |
    [loggers]
    keys=root,tornado,client,scheduler,server

    [logger_root]
    level=DEBUG
    handlers=console

    [logger_client]
    level=DEBUG
    handlers=console
    qualname=luigi-interface
    propagate=0

    [logger_server]
    level=DEBUG
    handlers=console
    qualname=luigi.server
    propagate=0

    [logger_scheduler]
    level=DEBUG
    handlers=console
    qualname=luigi.scheduler
    propagate=0

    [logger_tornado]
    level=DEBUG
    handlers=warnconsole
    qualname=tornado
    propagate=0

    [formatters]
    keys=detail

    [formatter_detail]
    class=logging.Formatter
    format=%(asctime)s %(name)-15s %(levelname)-8s %(message)s

    [handlers]
    keys=console,warnconsole

    [handler_console]
    level=INFO
    class=StreamHandler
    args=(sys.stdout,)
    formatter=detail

    [handler_warnconsole]
    level=WARNING
    class=StreamHandler
    args=(sys.stdout,)
    formatter=detail


---
# Source: luigi/charts/mysql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-mysql
  labels:
    app: RELEASE-NAME-mysql
    chart: "mysql-0.3.4"
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  type: ClusterIP
  ports:
  - name: mysql
    port: 3306
    targetPort: mysql
  selector:
    app: RELEASE-NAME-mysql

---
# Source: luigi/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-luigi
  labels:
    app: luigi
    chart: luigi-2.7.4
    release: RELEASE-NAME
    heritage: Tiller
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8082
      protocol: TCP
      name: http
  selector:
    app: luigi
    release: RELEASE-NAME

---
# Source: luigi/charts/mysql/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: RELEASE-NAME-mysql
  labels:
    app: RELEASE-NAME-mysql
    chart: "mysql-0.3.4"
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  template:
    metadata:
      labels:
        app: RELEASE-NAME-mysql
    spec:
      initContainers:
      - name: "remove-lost-found"
        image: "busybox:1.25.0"
        imagePullPolicy: "IfNotPresent"
        command:  ["rm", "-fr", "/var/lib/mysql/lost+found"]
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
      containers:
      - name: RELEASE-NAME-mysql
        image: "mysql:5.7.14"
        imagePullPolicy: "IfNotPresent"
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          
        env:
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "true"
        - name: MYSQL_USER
          value: ""
        - name: MYSQL_DATABASE
          value: "luigidb"
        ports:
        - name: mysql
          containerPort: 3306
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
      volumes:
      - name: data
        emptyDir: {}
---
# Source: luigi/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-luigi
  labels:
    app: luigi
    chart: luigi-2.7.4
    release: RELEASE-NAME
    heritage: Tiller
spec:
  selector:
    matchLabels:
      app: luigi
      release: RELEASE-NAME
  replicas: 1
  template:
    metadata:
      labels:
        app: luigi
        release: RELEASE-NAME
    spec:
      containers:
        - name: luigi
          image: "axiom/docker-luigi:2.7.2-alpine"
          command: ["/bin/sh", "-c", "luigid"]
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8082
          livenessProbe:
            httpGet:
              path: /static/visualiser/index.html
              port: 8082
          readinessProbe:
            httpGet:
              path: /static/visualiser/index.html
              port: 8082
          resources:
            {}
            
          volumeMounts:
          - name: luigi-luigi-conf
            mountPath: /etc/luigi/client.cfg
            subPath: client.cfg
          - name: luigi-logging-conf
            mountPath: /etc/luigi/logging.cfg
            subPath: logging.cfg
          - name: luigi-state
            mountPath: /luigi/state/

      volumes:
      - name: luigi-luigi-conf
        configMap:
          name: RELEASE-NAME-luigi
          items:
          - key: client.cfg
            path: client.cfg

      - name: luigi-logging-conf
        configMap:
          name: RELEASE-NAME-luigi
          items:
          - key: logging.cfg
            path: logging.cfg

      - name: luigi-state
        emptyDir: {}
      

---
# Source: luigi/charts/mysql/templates/configmap.yaml

---
# Source: luigi/charts/mysql/templates/pvc.yaml


---
# Source: luigi/templates/ingress_api.yaml

---
# Source: luigi/templates/ingress_ui.yaml

---
# Source: luigi/templates/pvc.yaml


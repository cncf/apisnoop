---
# Source: xray/charts/mongodb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-mongodb
  labels:
    app: mongodb
    chart: "mongodb-2.0.5"
    release: "RELEASE-NAME"
    heritage: "Tiller"
type: Opaque
data:
  mongodb-root-password: "Wm51WkxnNk1UMw=="
  mongodb-password: "NHg1SzdWZzdQOA=="

---
# Source: xray/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-postgresql
  labels:
    app: RELEASE-NAME-postgresql
    chart: "postgresql-0.8.7"
    release: "RELEASE-NAME"
    heritage: "Tiller"
type: Opaque
data:
  
  postgres-password: "aGhKV0lsamNwTw=="
  

---
# Source: xray/charts/rabbitmq-ha/templates/secret.yaml

apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-rabbitmq-ha
  labels:
    app: rabbitmq-ha
    chart: "rabbitmq-ha-1.5.2"
    release: "RELEASE-NAME"
    heritage: "Tiller"
type: Opaque
data:
  
  rabbitmq-password: "MDp4cDVTS1NlX3J5Lkt5KFZ4P2BoZ0x2"
  
  
  rabbitmq-erlang-cookie: "WFJBWVJBQkJJVE1RQ0xVU1RFUg=="
  

---
# Source: xray/templates/xray-master-key.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-xray-master-key
  labels:
    app: xray
    chart: xray-0.3.2
    heritage: Tiller
    release: RELEASE-NAME
type: Opaque
data:
  master-key: "RkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRg=="


---
# Source: xray/templates/rabbitmq-ha-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-xray-rabbitmq-ha
  labels:
    app: xray
    chart: xray-0.3.2
    heritage: Tiller
    release: RELEASE-NAME
data:
  enabled_plugins: |
    [
      rabbitmq_consistent_hash_exchange,
      rabbitmq_federation,
      rabbitmq_federation_management,
      rabbitmq_management,
      rabbitmq_peer_discovery_k8s,
      rabbitmq_shovel,
      rabbitmq_shovel_management
    ].

  rabbitmq.conf: |
    ## RabbitMQ configuration
    ## Ref: https://github.com/rabbitmq/rabbitmq-server/blob/master/docs/rabbitmq.conf.example

    ## Clustering
    cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
    cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
    cluster_formation.k8s.address_type = hostname
    cluster_formation.node_cleanup.interval = 10
    cluster_formation.node_cleanup.only_log_warning = false
    cluster_partition_handling = autoheal

    ## The default "guest" user is only permitted to access the server
    ## via a loopback interface (e.g. localhost)
    loopback_users.guest = false

    ## Memory-based Flow Control threshold
    vm_memory_high_watermark.absolute = 500MB

    management.load_definitions = /etc/rabbitmq/definitions.json
  definitions.json: |
    {
      "users": [
        {
          "name": "guest",
          "password": "",
          "tags": "administrator"
        }
      ],
      "permissions": [
        {
          "configure": ".*",
          "read": ".*",
          "user": "guest",
          "vhost": "/",
          "write": ".*"
        }
      ],
      "policies": [
        {
          "apply-to": "all",
          "definition": {
            "ha-mode": "all",
            "ha-sync-mode": "automatic"
          },
          "name": "ha-all",
          "pattern": ".",
          "priority": 0,
          "vhost": "/"
        }
      ],
      "vhosts": [
        {
          "name": "/"
        }
      ]
    }

---
# Source: xray/templates/xray-setup-conf.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-xray-setup
  labels:
    app: xray
    chart: xray-0.3.2
    heritage: Tiller
    release: RELEASE-NAME
data:
  setup.sh: |
    #!/bin/sh
    # Setup script for Xray microservice

    SCRIPTS_DIR=/scripts
    XRAYCONFIGPATH=/var/opt/jfrog/xray/data
    XRAY_CONFIG_DIR=${XRAYCONFIGPATH}/config
    XRAY_CONFIG_FILE=${XRAY_CONFIG_DIR}/xray_config.yaml

    echo "Creating directories"
    mkdir -pv ${XRAY_CONFIG_DIR}

    # Wait for DBs to be ready
    echo "Waiting for DBs..."
    until nc -z -w 2 RELEASE-NAME-postgresql 5432 && echo postgresql ok; do
      sleep 2;
    done;
    until nc -z -w 2 RELEASE-NAME-mongodb 27017 && echo mongodb ok; do
      sleep 2;
    done;
    until nc -z -w 2 RELEASE-NAME-rabbitmq-ha 5672 && echo rabbitmq ok; do
      sleep 2;
    done;

    # Prepare Xray config
    echo "Preparing Xray config (${XRAY_CONFIG_FILE})"
    if [ -f ${XRAY_CONFIG_FILE} ]; then
      echo "Config exist. Backing it up..."
      cp -vf ${XRAY_CONFIG_FILE} ${XRAY_CONFIG_FILE}-$(date +%Y%m%d-%H%M%S)
    fi

    # Creating Mongodb URL
    MONGODB_URL="mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@RELEASE-NAME-mongodb:27017/?authSource=${MONGODB_DATABASE}\&authMechanism=SCRAM-SHA-1"

    # Creating PostgreSQL URL
    POSTGRESS_URL="postgres://${POSTGRES_USER}:${POSTGRESS_PASSWORD}@RELEASE-NAME-postgresql:5432/${POSTGRESS_DB}?sslmode=disable"

    # Creating Rabbitmq-Ha URL
    RABBITMQ_URL="amqp://${RABBITMQ_USER}:${RABBITMQ_DEFAULT_PASS}@RELEASE-NAME-rabbitmq-ha:5672/"
    cp -vf ${SCRIPTS_DIR}/xray_config.yaml ${XRAY_CONFIG_FILE}

    # Preparing xray_config.yaml
    sed -i "s RABBITMQ_URL ${RABBITMQ_URL} " ${XRAY_CONFIG_FILE}
    sed -i "s MONGODB_URL ${MONGODB_URL} " ${XRAY_CONFIG_FILE}
    sed -i "s POSTGRESS_URL ${POSTGRESS_URL} " ${XRAY_CONFIG_FILE}

  xray_config.yaml: |
    # Generated Xray config
    ---
        ver:            1.0
        XrayServerPort: "8000"
        mqBaseUrl:      "RABBITMQ_URL"
        mongoUrl:       "MONGODB_URL"
        postgresqlUrl:  "POSTGRESS_URL"
        stdOutEnabled:  true
        skipEntLicCheckForCloud: true
    # End generated config


---
# Source: xray/charts/mongodb/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: RELEASE-NAME-mongodb
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "50Gi"

---
# Source: xray/charts/postgresql/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: RELEASE-NAME-postgresql
  labels:
    app: RELEASE-NAME-postgresql
    chart: "postgresql-0.8.7"
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "50Gi"
---
# Source: xray/charts/rabbitmq-ha/templates/serviceaccount.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: rabbitmq-ha
    chart: "rabbitmq-ha-1.5.2"
    release: "RELEASE-NAME"
    heritage: "Tiller"
  name: RELEASE-NAME-rabbitmq-ha

---
# Source: xray/charts/mongodb/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-mongodb
  labels:
    app: mongodb
    chart: "mongodb-2.0.5"
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  type: ClusterIP
  ports:
  - name: mongodb
    port: 27017
    targetPort: mongodb
  selector:
    app: mongodb
    release: "RELEASE-NAME"

---
# Source: xray/charts/postgresql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-postgresql
  labels:
    app: RELEASE-NAME-postgresql
    chart: "postgresql-0.8.7"
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  type: ClusterIP
  ports:
  - name: postgresql
    port: 5432
    targetPort: postgresql
  selector:
    app: RELEASE-NAME-postgresql
---
# Source: xray/charts/rabbitmq-ha/templates/service-discovery.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-rabbitmq-ha-discovery
  labels:
    app: rabbitmq-ha
    chart: rabbitmq-ha-1.5.2
    release: RELEASE-NAME
    heritage: Tiller
spec:
  clusterIP: None
  ports:
    - name: http
      protocol: TCP
      port: 15672
      targetPort: http
    - name: amqp
      protocol: TCP
      port: 5672
      targetPort: amqp
    - name: epmd
      protocol: TCP
      port: 4369
      targetPort: epmd
  selector:
    app: rabbitmq-ha
    release: RELEASE-NAME
  type: ClusterIP

---
# Source: xray/charts/rabbitmq-ha/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-rabbitmq-ha
  labels:
    app: rabbitmq-ha
    chart: rabbitmq-ha-1.5.2
    release: RELEASE-NAME
    heritage: Tiller
spec:
  clusterIP: ""
  ports:
    - name: http
      protocol: TCP
      port: 15672
      targetPort: http
    - name: amqp
      protocol: TCP
      port: 5672
      targetPort: amqp
    - name: epmd
      protocol: TCP
      port: 4369
      targetPort: epmd
  selector:
    app: rabbitmq-ha
    release: RELEASE-NAME
  type: ClusterIP

---
# Source: xray/templates/xray-analysis-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-xray-analysis
  labels:
    app: xray
    chart: xray-0.3.2
    component: xray-analysis
    heritage: Tiller
    release: RELEASE-NAME
spec:
  type: ClusterIP
  ports:
  - port: 7000
    protocol: TCP
    name: http
    targetPort: 7000
  selector:
    app: xray
    component: xray-analysis
    release: RELEASE-NAME
---
# Source: xray/templates/xray-indexer-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-xray-indexer
  labels:
    app: xray
    chart: xray-0.3.2
    component: xray-indexer
    heritage: Tiller
    release: RELEASE-NAME
spec:
  type: ClusterIP
  ports:
  - port: 7002
    protocol: TCP
    name: http
    targetPort: 7002
  selector:
    app: xray
    component: xray-indexer
    release: RELEASE-NAME
---
# Source: xray/templates/xray-persist-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-xray-persist
  labels:
    app: xray
    chart: xray-0.3.2
    component: xray-persist
    heritage: Tiller
    release: RELEASE-NAME
spec:
  type: ClusterIP
  ports:
  - port: 7003
    protocol: TCP
    name: http
    targetPort: 7003
  selector:
    app: xray
    component: xray-persist
    release: RELEASE-NAME
---
# Source: xray/templates/xray-server-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-xray-server
  labels:
    app: xray
    chart: xray-0.3.2
    component: xray-server
    heritage: Tiller
    release: RELEASE-NAME
spec:
  type: LoadBalancer
  ports:
  - port: 80
    protocol: TCP
    name: http
    targetPort: 8000
  selector:
    app: xray
    component: xray-server
    release: RELEASE-NAME
---
# Source: xray/charts/mongodb/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: RELEASE-NAME-mongodb
  labels:
    app: mongodb
    chart: "mongodb-2.0.5"
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  template:
    metadata:
      labels:
        app: mongodb
        release: "RELEASE-NAME"
    spec:
      containers:
      - name: RELEASE-NAME-mongodb
        image: docker.io/bitnami/mongodb:3.6.3
        imagePullPolicy: "IfNotPresent"
        env:
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-mongodb
              key: mongodb-root-password
        - name: MONGODB_USERNAME
          value: "xray"
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-mongodb
              key: mongodb-password
        - name: MONGODB_DATABASE
          value: "xray"
        - name: MONGODB_EXTRA_FLAGS
          value: --wiredTigerCacheSizeGB=1
        ports:
        - name: mongodb
          containerPort: 27017
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
          
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
          
        volumeMounts:
        - name: data
          mountPath: /bitnami/mongodb
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: RELEASE-NAME-mongodb
---
# Source: xray/charts/postgresql/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: RELEASE-NAME-postgresql
  labels:
    app: RELEASE-NAME-postgresql
    chart: "postgresql-0.8.7"
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  template:
    metadata:
      labels:
        app: RELEASE-NAME-postgresql
    spec:
      containers:
      - name: RELEASE-NAME-postgresql
        image: "postgres:9.6.2"
        imagePullPolicy: ""
        env:
        - name: POSTGRES_USER
          value: "xray"
          # Required for pg_isready in the health probes.
        - name: PGUSER
          value: "xray"
        - name: POSTGRES_DB
          value: "xraydb"
        - name: POSTGRES_INITDB_ARGS
          value: ""
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-postgresql
              key: postgres-password
        - name: POD_IP
          valueFrom: { fieldRef: { fieldPath: status.podIP } }
        ports:
        - name: postgresql
          containerPort: 5432
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 5
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: 250m
            memory: 1Gi
          
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data/pgdata
          subPath: postgresql-db
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: RELEASE-NAME-postgresql

---
# Source: xray/templates/xray-analysis-deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-xray-analysis
  labels:
    app: xray-analysis
    chart: xray-0.3.2
    heritage: Tiller
    release: RELEASE-NAME
    component: xray-analysis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xray
      release: RELEASE-NAME
      component: xray-analysis
  template:
    metadata:
      labels:
        app: xray
        release: RELEASE-NAME
        component: xray-analysis
    spec:
      securityContext:
        runAsUser: 1035
        fsGroup: 1035
      initContainers:
      - name: init-wait
        image: "alpine:3.6"
        env:
        - name: MONGODB_USER
          value: xray
        - name: MONGODB_DATABASE
          value: xray
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-mongodb
              key: mongodb-password
        - name: POSTGRES_USER
          value: xray
        - name: POSTGRESS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-postgresql
              key: postgres-password
        - name: POSTGRESS_DB
          value: xraydb
        - name: RABBITMQ_USER
          value: guest
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-rabbitmq-ha
              key: rabbitmq-erlang-cookie
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-rabbitmq-ha
              key: rabbitmq-password
        command:
        - '/bin/sh'
        - '-c'
        - >
          cp -fv /scripts/setup.sh /var/opt/jfrog/xray/data;
          chmod +x /var/opt/jfrog/xray/data/setup.sh;
          /var/opt/jfrog/xray/data/setup.sh;
        volumeMounts:
        - name: data-volume
          mountPath: "/var/opt/jfrog/xray/data"
        - name: setup
          mountPath: "/scripts"
      containers:
      - name: xray-analysis
        image: docker.bintray.io/jfrog/xray-analysis:2.1.0
        imagePullPolicy: IfNotPresent
        env:
        - name: XRAYCONFIGPATH
          value: "/var/opt/jfrog/xray/data"
        - name: XRAY_MASTER_KEY
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-xray-master-key
              key: master-key
        - name: XRAY_HA_NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        ports:
        - containerPort: 7000
        volumeMounts:
        - name: data-volume
          mountPath: "/var/opt/jfrog/xray/data"
        securityContext:
          allowPrivilegeEscalation: false
        resources:
          {}
          
        readinessProbe:
          httpGet:
            path: /debug/pprof/
            port: 7000
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 10
        livenessProbe:
          httpGet:
            path: /debug/pprof/
            port: 7000
          initialDelaySeconds: 90
          periodSeconds: 10
      volumes:
      - name: data-volume
        emptyDir:
          sizeLimit: 10Gi
      - name: config-volume
        emptyDir:
          sizeLimit: 1Gi
      - name: setup
        configMap:
          name: RELEASE-NAME-xray-setup

---
# Source: xray/templates/xray-indexer-deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-xray-indexer
  labels:
    app: xray
    chart: xray-0.3.2
    heritage: Tiller
    release: RELEASE-NAME
    component: xray-indexer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xray
      release: RELEASE-NAME
      component: xray-indexer
  template:
    metadata:
      labels:
        app: xray
        release: RELEASE-NAME
        component: xray-indexer
    spec:
      securityContext:
        runAsUser: 1035
        fsGroup: 1035
      initContainers:
      - name: init-wait
        image: "alpine:3.6"
        env:
        - name: MONGODB_USER
          value: xray
        - name: MONGODB_DATABASE
          value: xray
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-mongodb
              key: mongodb-password
        - name: POSTGRES_USER
          value: xray
        - name: POSTGRESS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-postgresql
              key: postgres-password
        - name: POSTGRESS_DB
          value: xraydb
        - name: RABBITMQ_USER
          value: guest
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-rabbitmq-ha
              key: rabbitmq-erlang-cookie
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-rabbitmq-ha
              key: rabbitmq-password
        command:
        - '/bin/sh'
        - '-c'
        - >
          cp -fv /scripts/setup.sh /var/opt/jfrog/xray/data;
          chmod +x /var/opt/jfrog/xray/data/setup.sh;
          /var/opt/jfrog/xray/data/setup.sh;
        volumeMounts:
        - name: data-volume
          mountPath: "/var/opt/jfrog/xray/data"
        - name: setup
          mountPath: "/scripts"
      containers:
      - name: xray-indexer
        image: docker.bintray.io/jfrog/xray-indexer:2.1.0
        imagePullPolicy: IfNotPresent
        env:
        - name: XRAYCONFIGPATH
          value: "/var/opt/jfrog/xray/data"
        - name: XRAY_MASTER_KEY
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-xray-master-key
              key: master-key
        - name: XRAY_HA_NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        ports:
        - containerPort: 7002
        volumeMounts:
        - name: data-volume
          mountPath: "/var/opt/jfrog/xray/data"
        securityContext:
          allowPrivilegeEscalation: false
        resources:
          {}
          
        readinessProbe:
          httpGet:
            path: /debug/pprof/
            port: 7002
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 10
        livenessProbe:
          httpGet:
            path: /debug/pprof/
            port: 7002
          initialDelaySeconds: 90
          periodSeconds: 10
      volumes:
      - name: data-volume
        emptyDir:
          sizeLimit: 10Gi
      - name: config-volume
        emptyDir:
          sizeLimit: 1Gi
      - name: setup
        configMap:
          name: RELEASE-NAME-xray-setup

---
# Source: xray/templates/xray-persist-deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-xray-persist
  labels:
    app: xray
    chart: xray-0.3.2
    heritage: Tiller
    release: RELEASE-NAME
    component: xray-persist
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xray
      release: RELEASE-NAME
      component: xray-persist
  template:
    metadata:
      labels:
        app: xray
        release: RELEASE-NAME
        component: xray-persist
    spec:
      securityContext:
        runAsUser: 1035
        fsGroup: 1035
      initContainers:
      - name: init-wait
        image: "alpine:3.6"
        env:
        - name: MONGODB_USER
          value: xray
        - name: MONGODB_DATABASE
          value: xray
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-mongodb
              key: mongodb-password
        - name: POSTGRES_USER
          value: xray
        - name: POSTGRESS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-postgresql
              key: postgres-password
        - name: POSTGRESS_DB
          value: xraydb
        - name: RABBITMQ_USER
          value: guest
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-rabbitmq-ha
              key: rabbitmq-erlang-cookie
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-rabbitmq-ha
              key: rabbitmq-password
        command:
        - '/bin/sh'
        - '-c'
        - >
          cp -fv /scripts/setup.sh /var/opt/jfrog/xray/data;
          chmod +x /var/opt/jfrog/xray/data/setup.sh;
          /var/opt/jfrog/xray/data/setup.sh;
        volumeMounts:
        - name: data-volume
          mountPath: "/var/opt/jfrog/xray/data"
        - name: setup
          mountPath: "/scripts"
      containers:
      - name: xray-persist
        image: docker.bintray.io/jfrog/xray-persist:2.1.0
        imagePullPolicy: IfNotPresent
        env:
        - name: XRAYCONFIGPATH
          value: "/var/opt/jfrog/xray/data"
        - name: XRAY_MASTER_KEY
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-xray-master-key
              key: master-key
        - name: XRAY_HA_NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        ports:
        - containerPort: 7003
        volumeMounts:
        - name: data-volume
          mountPath: "/var/opt/jfrog/xray/data"
        securityContext:
          allowPrivilegeEscalation: false
        resources:
          {}
          
        readinessProbe:
          httpGet:
            path: /debug/pprof/
            port: 7003
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 10
        livenessProbe:
          httpGet:
            path: /debug/pprof/
            port: 7003
          initialDelaySeconds: 90
          periodSeconds: 10
      volumes:
      - name: data-volume
        emptyDir:
          sizeLimit: 10Gi
      - name: config-volume
        emptyDir:
          sizeLimit: 1Gi
      - name: setup
        configMap:
          name: RELEASE-NAME-xray-setup

---
# Source: xray/templates/xray-server-deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-xray-server
  labels:
    app: xray
    chart: xray-0.3.2
    heritage: Tiller
    release: RELEASE-NAME
    component: xray-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xray
      release: RELEASE-NAME
      component: xray-server
  template:
    metadata:
      labels:
        app: xray
        release: RELEASE-NAME
        component: xray-server
    spec:
      securityContext:
        runAsUser: 1035
        fsGroup: 1035
      initContainers:
      - name: init-wait
        image: "alpine:3.6"
        env:
        - name: MONGODB_USER
          value: xray
        - name: MONGODB_DATABASE
          value: xray
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-mongodb
              key: mongodb-password
        - name: POSTGRES_USER
          value: xray
        - name: POSTGRESS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-postgresql
              key: postgres-password
        - name: POSTGRESS_DB
          value: xraydb
        - name: RABBITMQ_USER
          value: guest
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-rabbitmq-ha
              key: rabbitmq-erlang-cookie
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-rabbitmq-ha
              key: rabbitmq-password
        command:
        - '/bin/sh'
        - '-c'
        - >
          cp -fv /scripts/setup.sh /var/opt/jfrog/xray/data;
          chmod +x /var/opt/jfrog/xray/data/setup.sh;
          /var/opt/jfrog/xray/data/setup.sh;
        volumeMounts:
        - name: data-volume
          mountPath: "/var/opt/jfrog/xray/data"
        - name: setup
          mountPath: "/scripts"
      containers:
      - name: xray-server
        image: docker.bintray.io/jfrog/xray-server:2.1.0
        imagePullPolicy: IfNotPresent
        env:
        - name: XRAYCONFIGPATH
          value: "/var/opt/jfrog/xray/data"
        - name: XRAY_MASTER_KEY
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-xray-master-key
              key: master-key
        - name: XRAY_HA_NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: data-volume
          mountPath: "/var/opt/jfrog/xray/data"
        securityContext:
          allowPrivilegeEscalation: false
        resources:
          {}
          
        readinessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 10
        livenessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 90
          periodSeconds: 10
      volumes:
      - name: data-volume
        emptyDir:
          sizeLimit: 10Gi
      - name: config-volume
        emptyDir:
          sizeLimit: 1Gi
      - name: setup
        configMap:
          name: RELEASE-NAME-xray-setup

---
# Source: xray/charts/rabbitmq-ha/templates/statefulset.yaml
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: RELEASE-NAME-rabbitmq-ha
  labels:
    app: rabbitmq-ha
    chart: rabbitmq-ha-1.5.2
    release: RELEASE-NAME
    heritage: Tiller
spec:
  serviceName: RELEASE-NAME-rabbitmq-ha-discovery
  replicas: 1
  updateStrategy:
    type: OnDelete
  template:
    metadata:
      labels:
        app: rabbitmq-ha
        release: RELEASE-NAME
      annotations:
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: RELEASE-NAME-rabbitmq-ha
      initContainers:
        - name: copy-rabbitmq-config
          image: busybox
          command: ['sh', '-c', 'cp /configmap/* /etc/rabbitmq; rm -f /var/lib/rabbitmq/.erlang.cookie']
          volumeMounts:
            - name: configmap
              mountPath: /configmap
            - name: config
              mountPath: /etc/rabbitmq
            - name: data
              mountPath: /var/lib/rabbitmq
      containers:
        - name: rabbitmq-ha
          image: rabbitmq:3.7-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - name: epmd
              protocol: TCP
              containerPort: 4369
            - name: amqp
              protocol: TCP
              containerPort: 5672
            - name: http
              protocol: TCP
              containerPort: 15672
          livenessProbe:
            exec:
              command:
                - rabbitmqctl
                - status
            initialDelaySeconds: 120
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - rabbitmqctl
                - status
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 5
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: RABBITMQ_USE_LONGNAME
              value: "true"
            - name: RABBITMQ_NODENAME
              value: rabbit@$(MY_POD_NAME).RELEASE-NAME-rabbitmq-ha-discovery.hub.svc.cluster.local
            - name: K8S_HOSTNAME_SUFFIX
              value: .RELEASE-NAME-rabbitmq-ha-discovery.hub.svc.cluster.local
            - name: K8S_SERVICE_NAME
              value: RELEASE-NAME-rabbitmq-ha-discovery
            - name: RABBITMQ_ERLANG_COOKIE
              valueFrom:
                secretKeyRef:
                  name: RELEASE-NAME-rabbitmq-ha
                  key: rabbitmq-erlang-cookie
            - name: RABBITMQ_DEFAULT_USER
              value: "guest"
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: RELEASE-NAME-rabbitmq-ha
                  key: rabbitmq-password
            - name: RABBITMQ_DEFAULT_VHOST
              value: "/"
          resources:
            {}
            
          volumeMounts:
            - name: data
              mountPath: /var/lib/rabbitmq
            - name: config
              mountPath: /etc/rabbitmq
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: rabbitmq-ha
                    release: RELEASE-NAME
      volumes:
        - name: config
          emptyDir: {}
        - name: configmap
          configMap:
            name: RELEASE-NAME-rabbitmq-ha
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "20Gi"

---
# Source: xray/charts/postgresql/templates/networkpolicy.yaml


---
# Source: xray/charts/rabbitmq-ha/templates/configmap.yaml


---
# Source: xray/charts/rabbitmq-ha/templates/ingress.yaml


---
# Source: xray/charts/rabbitmq-ha/templates/role.yaml


---
# Source: xray/charts/rabbitmq-ha/templates/rolebinding.yaml



---
# Source: haproxy-ingress/templates/controller-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-haproxy-ingress
  namespace: hub
data:
  healthz-port: "10253"
  stats-port: "1936"

---
# Source: haproxy-ingress/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: RELEASE-NAME-haproxy-ingress
  namespace: hub
---
# Source: haproxy-ingress/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: RELEASE-NAME-haproxy-ingress
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - "extensions"
    resources:
      - ingresses/status
    verbs:
      - update
---
# Source: haproxy-ingress/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: RELEASE-NAME-haproxy-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: RELEASE-NAME-haproxy-ingress
subjects:
  - kind: ServiceAccount
    name: RELEASE-NAME-haproxy-ingress
    namespace: hub
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: RELEASE-NAME-haproxy-ingress
---
# Source: haproxy-ingress/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: RELEASE-NAME-haproxy-ingress
  namespace: hub
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - create
      - update
---
# Source: haproxy-ingress/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: RELEASE-NAME-haproxy-ingress
  namespace:  hub
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: RELEASE-NAME-haproxy-ingress
subjects:
  - kind: ServiceAccount
    name: RELEASE-NAME-haproxy-ingress
    namespace: hub
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: RELEASE-NAME-haproxy-ingress
---
# Source: haproxy-ingress/templates/controller-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: haproxy-ingress
    chart: haproxy-ingress-0.0.3
    release: RELEASE-NAME
    heritage: Tiller
  name: RELEASE-NAME-haproxy-ingress
  namespace: hub
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
  selector:
    app: haproxy-ingress
    release: RELEASE-NAME
  type: "LoadBalancer"

---
# Source: haproxy-ingress/templates/default-backend-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ingress-default-backend
  labels:
    app: haproxy-ingress
    chart: haproxy-ingress-0.0.3
    release: RELEASE-NAME
    heritage: Tiller
spec:
  ports:
    - port: 8080
  selector:
    app: haproxy-ingress
    release: RELEASE-NAME
---
# Source: haproxy-ingress/templates/controller-daemonset.yaml
apiVersion: apps/v1beta2
kind: DaemonSet
metadata:
  labels:
    app: haproxy-ingress
    chart: haproxy-ingress-0.0.3
    release: RELEASE-NAME
    heritage: Tiller
  name: RELEASE-NAME-haproxy-ingress
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: haproxy-ingress
      release: RELEASE-NAME
  template:
    metadata:
      labels:
        app: haproxy-ingress
        release: RELEASE-NAME
    spec:
      serviceAccountName: RELEASE-NAME-haproxy-ingress
      containers:
        - name: RELEASE-NAME-haproxy-ingress
          image:  "quay.io/jcmoraisjr/haproxy-ingress:v0.6"
          imagePullPolicy: "IfNotPresent"
          args:
            - --default-backend-service=hub/ingress-default-backend
            - --configmap=hub/RELEASE-NAME-haproxy-ingress
            - --ingress-class=haproxy
            - --sort-backends
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
            - name: stats
              containerPort: 1936
            - name: healthz
              containerPort: 10253
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10253
              scheme: HTTP
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10253
              scheme: HTTP
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            {}
            

---
# Source: haproxy-ingress/templates/default-backend-deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: haproxy-ingress
    chart: haproxy-ingress-0.0.3
    heritage: Tiller
    release: RELEASE-NAME
  name: ingress-default-backend
  namespace: hub
spec:
  selector:
    matchLabels:
      app: haproxy-ingress
      release: RELEASE-NAME
  template:
    metadata:
      labels:
        app: haproxy-ingress
        release: RELEASE-NAME
    spec:
      containers:
        - name: ingress-default-backend
          image: "gcr.io/google_containers/defaultbackend:1.0"
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 10m
              memory: 20Mi
---
# Source: haproxy-ingress/templates/tcp-configmap.yaml



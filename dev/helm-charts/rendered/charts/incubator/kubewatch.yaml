---
# Source: kubewatch/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: kubewatch
    chart: "kubewatch-0.2.3"
    heritage: "Tiller"
    release: "RELEASE-NAME"
  name: RELEASE-NAME-kubewatch-config
data:
  .kubewatch.yaml: |
    handler:
      slack:
        channel: XXXX
        token: XXXX
        
    resource:
      daemonset: false
      deployment: true
      job: false
      persistentvolume: false
      pod: true
      replicaset: false
      replicationcontroller: false
      services: false
      

---
# Source: kubewatch/templates/deployment.yaml
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: kubewatch
    chart: "kubewatch-0.2.3"
    heritage: "Tiller"
    release: "RELEASE-NAME"
  name: RELEASE-NAME-kubewatch
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/config-map: a41d91dac71b7dee8eabf9cd3c5adb8ca2b9a8f5357f37cae94548428af90825
      labels:
        app: kubewatch
        release: "RELEASE-NAME"
    spec:
      containers:
      - name: kubewatch
        image: tuna/kubewatch:v0.0.3
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: kubewatch-config-map
          mountPath: /root
        resources:
          {}
          
      serviceAccountName: "default"
      tolerations:
        []
        
      restartPolicy: Always
      volumes:
      - name: kubewatch-config-map
        configMap:
          name: RELEASE-NAME-kubewatch-config


---
# Source: kubewatch/templates/clusterrole.yaml

---
# Source: kubewatch/templates/clusterrolebinding.yaml

---
# Source: kubewatch/templates/servieaccount.yaml


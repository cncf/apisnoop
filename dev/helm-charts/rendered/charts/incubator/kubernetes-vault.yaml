---
# Source: kubernetes-vault/templates/config-map.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-kubernetes-vault
  labels:
    app: RELEASE-NAME-kubernetes-vault
    chart: kubernetes-vault-0.2.1
    heritage: Tiller
    release: RELEASE-NAME
data:
  kubernetes-vault.yml: |
    # Dummy comment: https://github.com/kubernetes/helm/blob/master/docs/chart_template_guide/yaml_techniques.md#strings-in-yaml
    kubernetes:
      service: 'RELEASE-NAME-kubernetes-vault'
      serviceNamespace: ${KUBERNETES_NAMESPACE}
      watchNamespace: ${KUBERNETES_NAMESPACE}
    vault:
      addr: http://vault:8200
      token: change-this-value
    

---
# Source: kubernetes-vault/templates/service-account.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: RELEASE-NAME-kubernetes-vault
  namespace: hub
  labels:
    app: kubernetes-vault
    chart: kubernetes-vault-0.2.1
    release: RELEASE-NAME
    heritage: Tiller

---
# Source: kubernetes-vault/templates/rbac.yaml

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: RELEASE-NAME-kubernetes-vault
  labels:
    app: kubernetes-vault
    chart: kubernetes-vault-0.2.1
    release: RELEASE-NAME
    heritage: Tiller
subjects:
- kind: ServiceAccount
  name: RELEASE-NAME-kubernetes-vault
  namespace: hub
roleRef:
  kind: ClusterRole
  name: RELEASE-NAME-kubernetes-vault
  apiGroup: rbac.authorization.k8s.io

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: RELEASE-NAME-kubernetes-vault
  labels:
    app: kubernetes-vault
    chart: kubernetes-vault-0.2.1
    release: RELEASE-NAME
    heritage: Tiller
rules:
- apiGroups: [""]
  resources:
  - pods
  verbs: ["list", "watch"]
- apiGroups: [""]
  resources:
  - endpoints
  verbs: ["get"]

---
# Source: kubernetes-vault/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-kubernetes-vault
  labels:
    app: kubernetes-vault
    chart: kubernetes-vault-0.2.1
    release: RELEASE-NAME
    heritage: Tiller
spec:
  clusterIP: None
  ports:
    - name: port 
      port: 80
  selector:
    run: RELEASE-NAME-kubernetes-vault
    app: kubernetes-vault
    release: RELEASE-NAME

---
# Source: kubernetes-vault/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: RELEASE-NAME-kubernetes-vault
  labels:
    app: kubernetes-vault
    chart: kubernetes-vault-0.2.1
    release: RELEASE-NAME
    heritage: Tiller
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kubernetes-vault
      release: RELEASE-NAME
  template:
    metadata:
      labels:
        app: kubernetes-vault
        release: RELEASE-NAME
    spec:
      serviceAccountName: RELEASE-NAME-kubernetes-vault
      volumes:
        - name: config-volume
          configMap:
            name: RELEASE-NAME-kubernetes-vault
      containers:
        - name: kubernetes-vault
          image: "boostport/kubernetes-vault:v0.5.2"
          imagePullPolicy: Always
          env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
          - name: config-volume
            mountPath: /kubernetes-vault
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
            


#+TITLE: Template Generator for Helm Charts
#+AUTHOR: Stephen Heywood
#+EMAIL: stephen@ii.coop
#+CREATOR: ii.coop
#+DATE: December 5ith, 2018
#+PROPERTY: header-args:shell :results output list raw replace
#+PROPERTY: header-args:tmate  :socket (symbol-value 'socket)
#+PROPERTY: header-args:tmate+ :session (user-login-name)

* Summary

This file is an interactive walkthrough for generating template files for Helm Charts.
A static analysis process will use these templates to solve a number of questions about the project.
The first being, what are the most common resources used?

#+Checkout the Charts
#+BEGIN_SRC tmate
    export TDIR=$(mktemp -d)
    cd $TDIR
    git clone https://github.com/helm/charts
#+END_SRC

#+Checkout the Charts
#+BEGIN_SRC tmate
  # for c in `ls -d charts/*/*/ | egrep -v test/\|incubator/`
  for c in `ls -d charts/*/*/ | egrep -v test/`
  do
   chartpath=$(echo $c | sed s:/$::)
   chart=`basename $chartpath`
   chartdir=`dirname $chartpath`
   outdir=out/`dirname $chartpath`
   mkdir -p $outdir
   output=$outdir/$chart.yaml
   if [ -e $chartpath/requirements.yaml ]
     then echo === $chart ===
     echo === $chartpath ===
     helm dep up $chartpath
     echo Requirements Update for $chart
   fi
   helm template $chartpath > $output
  done
#+END_SRC

#+NAME: dest
#+BEGIN_SRC elisp
(concat (f-dirname buffer-file-name) "/rendered/" )
#+END_SRC

#+Copy results into this folder
#+BEGIN_SRC shell :var dest=dest()

#+END_SRC
* Requirements

Make sure that you have the following installed

- git
- helm


* Start each stage

#+BEGIN_SRC bash :noeval :tangle ./generate-templates.sh

  #!/usr/bin/env bash
  echo "Generating Templates..."
  export DIR_TEMPLATES=$(mktemp -d)
  echo "Writing templates to $DIR_TEMPLATES..."
  ./setup.sh
  ./scan-stable-apps.sh
  ./scan-incubator-apps.sh
  echo "Finished. Check results in $DIR_TEMPLATES"

#+END_SRC


* Setup the environment

#+BEGIN_SRC bash :noeval :tangle ./setup.sh

  #!/usr/bin/env bash
  cd $DIR_TEMPLATES
  mkdir $DIR_TEMPLATES/stable
  mkdir $DIR_TEMPLATES/incubator
  git clone https://github.com/helm/charts
  ls charts/stable > stable-apps.txt
  ls charts/incubator > incubator-apps.txt
  tree -L 1

#+END_SRC


* Scan 'stable' applications

#+BEGIN_SRC bash :noeval :tangle ./scan-stable-apps.sh

  #!/usr/bin/env bash
  echo "Generating templates for 'stable' apps..."
  cd $DIR_TEMPLATES
  for FOLDER in $(cat stable-apps.txt)
  do
    echo "Processing stable/$FOLDER..."
    cd $DIR_TEMPLATES/charts/stable/$FOLDER && helm template . &> $DIR_TEMPLATES/stable/$FOLDER.yaml
  done

#+END_SRC


* Scan 'incubator' applications

#+BEGIN_SRC bash :noeval :tangle ./scan-incubator-apps.sh

  #!/usr/bin/env bash
  echo "Generating templates for 'incubator' apps..."
  cd $DIR_TEMPLATES
  for FOLDER in $(cat incubator-apps.txt)
  do
    echo "Processing incubator/$FOLDER..."
    cd $DIR_TEMPLATES/charts/incubator/$FOLDER && helm template . &> $DIR_TEMPLATES/incubator/$FOLDER.yaml
  done

#+END_SRC


* Issues

- Some applications need more setup before we can generate the template file. For now an error message is recorded inside the ~yaml~ file.
- Make the scripts executable as part of the setup/tangle process. For now just make sure to ~chmod +x *.sh~

# Local Variables:
# eval: (setq socket (concat "/tmp/" user-login-name "." (file-name-base buffer-file-name) ".iisocket"))
# org-babel-tmate-session-prefix: ""
# org-babel-tmate-default-window-name: "main"
# org-confirm-babel-evaluate: nil
# End:

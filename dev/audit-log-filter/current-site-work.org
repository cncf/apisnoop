#+TITLE: Understanding our Current Site
#+AUTHOR: Zach Mandeville
#+EMAIL: zz@ii.coop
#+CREATOR: ii.coop
#+DATE: September 3rd, 2018

* Purpose
This org is meant to document how to reach and work on the current site and how it operates.  We will be refactoring it for better long-term stability and ability, but we will build off the work already made, and so it is best to understand how that looks.
* Accessing the box
The site is located at apisnoop.cncf.io

If you have the right permissions, you can reach the box with:
~ssh -At -p 2222 root@apisnoop.cncf.io tmux at~
* File Structure
The site is located at ~/www
** WWW
*** index.html
This is the main site, if you code any part of this it is live on the server.
*** dist 
Where all our assets reside: the CSS, the CSV's, and the Javascript
**** assorted csv's and gz
 We generate our charts from csv's, and so these are the csv's we use.  It would be useful, likely, to put them in their own directory so there's a clear link structure.
 The ~gz~ files are zipped up logs.  They are here so we can provide a download of the audit log that isn't a gig in size.
**** img
All our various icons.
**** js 
****** conformance.js
Part of Katherine's work for creating a google chart showing conformance data.
******** TODO find git link for Katherine's Work.
We will need to use this and study it better to integrate the chart into our front-end.
****** d3.v4.min.js
The d3 library in its entirety.
****** filter.js
The logic for our dropdown menu, and being able to choose from different data-sets. It doesn't work with how the data changes throughout the site, really just the logic of hovering over a dropdowna nd seeing different results.
The language was written quickly, and it can be refactored for better clarity.

In addition, there's some logic in here for moving between the different tabs.  This lets us have our 'charts' tab and our 'by user-agent' tab.  chart is the sunburst, user-agent is katherine's work.
****** mustache.min.js
The entire mustache library.  Mustache is a templating library and is likely being used for the google chart work.
****** sequences.js
Where the work around our sunburst chart resides, along with the work for managing which data is fed into the chart.
****** treelist.js
logic for the treelist on the right hand side of the chart's view.
**** logdir
I do not know.
**** semantic 
A css framework used to build up the ui.  I would, ultimately, want to replace this as I find it too opinionated.
*** old
Can ignore.
*** master-audit-logs.gz 
What we used to generate our CSV's.
*** package.tar.gz
Unsure.

* Adding Second Chart to Main Page
An attainable win is to have two charts on the main page, with one showing the test coverage before degradation and one showing after.  
** Refactoring the query selectors for chart.
Right now the chart is appended to a specific ID in the page (#chart), along with making changes to id's within this one. (#reallybigline, or #mediumline).  This doesn't make semantic sense to me, and it means that if we were to try to add a second chart, we'd have to add new id's for each bit of logic, like #reallybigline2.  This is because there can only be one element with a specific id per page.

We can redo the querySelector though, to have just #chart1 and #chart2, and all the style elements (like size of a line) be handled by classes.  so the first chart reallybig line would be found with:
The syntax for document.querySelector follows the same syntax for css selectors:
https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Selectors
#+NAME: Selecting really big line on first chart.
#+BEGIN_SRC js
document.querySelector(#chart.reallybigline)
#+END_SRC 

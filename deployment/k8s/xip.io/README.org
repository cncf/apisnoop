# -*- ii: y; -*-
#+TITLE: xip.io config

* Deploy kind
#+begin_src shell :tangle "./kubemacs/setup.sh"
  if [ ! -z "$DEBUG" ]; then
      set -x
  fi
  export KUSTOMIZE_PATH="${KUSTOMIZE_PATH:-https://github.com/cncf/apisnoop/deployment/k8s/xip.io}"
  export KIND_IMAGE="${KIND_IMAGE:- kindest/node:v1.17.0@sha256:9512edae126da271b66b990b6fff768fbb7cd786c7d39e86bdf55906352fdf62}"
  export DEFAULT_NS="${DEFAULT_NS:-ii}"

  docker pull $KIND_IMAGE

  if read -p "Press enter to destroy your current kind cluster, ^C to abort "; then
      kind delete cluster
  fi
  curl https://raw.githubusercontent.com/cncf/apisnoop/master/deployment/k8s/kind-cluster-config.yaml -o kind-cluster-config.yaml
  kind create cluster --config kind-cluster-config.yaml --image $KIND_IMAGE
#+end_src

* Cache Kubemacs image
  #+begin_src shell :tangle "./kubemacs/setup.sh"
    # ensure large images are cached
    kubectl apply --dry-run -k "$KUSTOMIZE_PATH" -o yaml | grep image: | sed 's/.*:\ \(.*\)/\1/' | sort | uniq | xargs -n 1 docker pull
    kubectl apply --dry-run -k "$KUSTOMIZE_PATH" -o yaml | grep image: | sed 's/.*:\ \(.*\)/\1/' | sort | uniq | xargs -n 1 kind load docker-image
  #+end_src

* Deploy apisnoop services
#+begin_src shell :tangle "./kubemacs/setup.sh"
  kubectl create ns $DEFAULT_NS
  kubectl config set-context $(kubectl config current-context) --namespace=$DEFAULT_NS

  #kubectl apply -k https://github.com/cncf/apisnoop/deployment/k8s/xip.io/kubemacs
  kubectl apply -k "$KUSTOMIZE_PATH"
#+end_src

#+RESULTS:
#+begin_src shell
#+end_src
* Change IP to match current

You might need to setup inbound routing, or it may just work for your IP

  #+begin_src shell
    IP=$(curl ifconfig.co)
    sed -i s:147.75.111.121:$IP:g *yaml
    # sed -i s:$IP:192.168.1.19:g *yaml
    echo http://tilt.$IP.xip.io
    # echo http://tilt.192.168.1.19.xip.io
  #+end_src

  #+RESULTS:
  #+begin_example
  http://tilt.103.26.16.167.xip.io
  #+end_example

* Bring up tilt
#+begin_src tmate :dir "."
  tilt up --host 0.0.0.0
#+end_src
